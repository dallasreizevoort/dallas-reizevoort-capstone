{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [topArtists, setTopArtists] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n  console.log(searchResults);\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  const cancel = useRef(false);\n  const debounceTimeoutRef = useRef(null);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"short_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsShort(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"medium_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsMedium(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"long_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsLong(res.body.items);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    cancel.current = false;\n    if (!search) return setSearchResults([]);\n    if (!accessToken || !spotifyApi.current.getAccessToken()) return;\n    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n    debounceTimeoutRef.current = setTimeout(() => {\n      spotifyApi.current.searchTracks(search).then(res => {\n        if (cancel.current) return;\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.album.images[0]);\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url // Removed the trailing period here\n          };\n        }));\n      });\n    }, 300);\n    return () => {\n      if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n      cancel.current = true;\n    };\n  }, [search, accessToken]);\n  const handleSearch = e => {\n    e.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   spotifyApi.current.setAccessToken(accessToken);\n  //   spotifyApi.current.getMyTopArtists().then((res) => {\n  //     setTopArtists(res.body.items);\n\n  //     const allGenres = res.body.items.flatMap((artist) => artist.genres);\n  //     const genreCount = allGenres.reduce((acc, genre) => {\n  //       acc[genre] = (acc[genre] || 0) + 1;\n  //       return acc;\n  //     }, {});\n  //     const topGenres = Object.entries(genreCount)\n  //       .sort((a, b) => b[1] - a[1])\n  //       .slice(0, 5)\n  //       .map(([genre]) => genre);\n  //     setTopGenres(topGenres);\n  //   });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Define a helper function to calculate top genres\n    // const calculateTopGenres = (artists) => {\n    //   const allGenres = artists.flatMap((artist) => artist.genres);\n    //   const genreCount = allGenres.reduce((acc, genre) => {\n    //     acc[genre] = (acc[genre] || 0) + 1;\n    //     return acc;\n    //   }, {});\n    //   return Object.entries(genreCount)\n    //     .sort((a, b) => b[1] - a[1])\n    //     .map(([genre]) => genre);\n    // };\n\n    const calculateTopGenres = artists => {\n      const allGenres = artists.flatMap(artist => artist.genres);\n      return allGenres;\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n    spotifyApi.current.getMyTopTracks({\n      limit: 50\n    }).then(res => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"short_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksShort(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"medium_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksMedium(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksLong(res.body.items);\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onCategorySelect: setSelectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n      track: track,\n      chooseTrack: chooseTrack\n    }, track.uri, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-artists\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__artists\",\n            children: [selectedTimeRange === \"short_term\" && topArtistsShort.map((artist, index) => {\n              var _artist$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$ = artist.images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topArtistsMedium.map((artist, index) => {\n              var _artist$images$2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$2 = artist.images[0]) === null || _artist$images$2 === void 0 ? void 0 : _artist$images$2.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topArtistsLong.map((artist, index) => {\n              var _artist$images$3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$3 = artist.images[0]) === null || _artist$images$3 === void 0 ? void 0 : _artist$images$3.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-tracks\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__tracks\",\n            children: [selectedTimeRange === \"short_term\" && topTracksShort.map((track, index) => {\n              var _track$album, _track$album$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topTracksMedium.map((track, index) => {\n              var _track$album2, _track$album2$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images$ = _track$album2.images[0]) === null || _track$album2$images$ === void 0 ? void 0 : _track$album2$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topTracksLong.map((track, index) => {\n              var _track$album3, _track$album3$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album3 = track.album) === null || _track$album3 === void 0 ? void 0 : (_track$album3$images$ = _track$album3.images[0]) === null || _track$album3$images$ === void 0 ? void 0 : _track$album3$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-genres\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__genres\",\n            children: [selectedTimeRange === \"short_term\" && topGenresShort.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                value: genre.count,\n                max: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 21\n            }, this)), selectedTimeRange === \"medium_term\" && topGenresMedium.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 21\n            }, this)), selectedTimeRange === \"long_term\" && topGenresLong.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recently-played\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__recents\",\n            children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.track.album.images[0].url,\n                alt: track.track.name,\n                className: \"track__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__title\",\n                children: track.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"mSbhZgL56mWOjfE7jsKYRYe/B+s=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","TrackSearchResult","Player","Header","Routes","Route","SpotifyIcon","jsxDEV","_jsxDEV","Dashboard","code","_s","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","topArtists","setTopArtists","topTracks","setTopTracks","topGenres","setTopGenres","recentlyPlayed","setRecentlyPlayed","recentlyPlayedTracks","setRecentlyPlayedTracks","topArtistsShort","setTopArtistsShort","topArtistsMedium","setTopArtistsMedium","topArtistsLong","setTopArtistsLong","topTracksShort","setTopTracksShort","topTracksMedium","setTopTracksMedium","topTracksLong","setTopTracksLong","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","selectedTimeRange","setSelectedTimeRange","selectedCategory","setSelectedCategory","chooseTrack","track","console","log","spotifyApi","clientId","cancel","debounceTimeoutRef","current","setAccessToken","getMyTopArtists","time_range","limit","then","res","body","items","getAccessToken","clearTimeout","setTimeout","searchTracks","tracks","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","handleSearch","e","preventDefault","calculateTopGenres","allGenres","flatMap","genres","timeRanges","forEach","timeRange","getMyTopTracks","getMyRecentlyPlayedTracks","response","className","children","onCategorySelect","fileName","_jsxFileName","lineNumber","columnNumber","onClick","path","element","index","_artist$images$","src","alt","href","external_urls","spotify","target","rel","_artist$images$2","_artist$images$3","_track$album","_track$album$images$","join","_track$album2","_track$album2$images$","_track$album3","_track$album3$images$","genre","value","count","max","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [topArtists, setTopArtists] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  \n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n\n  console.log(searchResults);\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n  const cancel = useRef(false);\n  const debounceTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"short_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsShort(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"medium_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsMedium(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"long_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsLong(res.body.items);\n      });\n  }, [accessToken]);\n\n  useEffect(() => {\n    cancel.current = false;\n    if (!search) return setSearchResults([]);\n    if (!accessToken || !spotifyApi.current.getAccessToken()) return;\n    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n    debounceTimeoutRef.current = setTimeout(() => {\n      spotifyApi.current.searchTracks(search).then((res) => {\n        if (cancel.current) return;\n        setSearchResults(\n          res.body.tracks.items.map((track) => {\n            const smallestAlbumImage = track.album.images.reduce(\n              (smallest, image) => {\n                if (image.height < smallest.height) return image;\n                return smallest;\n              },\n              track.album.images[0]\n            );\n            return {\n              artist: track.artists[0].name,\n              title: track.name,\n              uri: track.uri,\n              albumUrl: smallestAlbumImage.url, // Removed the trailing period here\n            };\n          })\n        );\n      });\n    }, 300);\n    return () => {\n      if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n      cancel.current = true;\n    };\n  }, [search, accessToken]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   spotifyApi.current.setAccessToken(accessToken);\n  //   spotifyApi.current.getMyTopArtists().then((res) => {\n  //     setTopArtists(res.body.items);\n\n  //     const allGenres = res.body.items.flatMap((artist) => artist.genres);\n  //     const genreCount = allGenres.reduce((acc, genre) => {\n  //       acc[genre] = (acc[genre] || 0) + 1;\n  //       return acc;\n  //     }, {});\n  //     const topGenres = Object.entries(genreCount)\n  //       .sort((a, b) => b[1] - a[1])\n  //       .slice(0, 5)\n  //       .map(([genre]) => genre);\n  //     setTopGenres(topGenres);\n  //   });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Define a helper function to calculate top genres\n    // const calculateTopGenres = (artists) => {\n    //   const allGenres = artists.flatMap((artist) => artist.genres);\n    //   const genreCount = allGenres.reduce((acc, genre) => {\n    //     acc[genre] = (acc[genre] || 0) + 1;\n    //     return acc;\n    //   }, {});\n    //   return Object.entries(genreCount)\n    //     .sort((a, b) => b[1] - a[1])\n    //     .map(([genre]) => genre);\n    // };\n\n    const calculateTopGenres = (artists) => {\n      const allGenres = artists.flatMap((artist) => artist.genres);\n      return allGenres;\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange, limit: 50 })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n\n    spotifyApi.current.getMyTopTracks({ limit: 50 }).then((res) => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"short_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksShort(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"medium_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksMedium(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"long_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksLong(res.body.items);\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n      <Header onCategorySelect={setSelectedCategory} />\n      {selectedCategory && (\n      <section className=\"dashboard__hero\">\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"short_term\")}\n        >\n          Past 4 weeks\n        </button>\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"medium_term\")}\n        >\n          Past 6 months\n        </button>\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"long_term\")}\n        >\n          All time\n        </button>\n      </section>\n      )};\n      <div className=\"dashboard__songs\"></div>\n      {searchResults.map((track) => (\n        <TrackSearchResult\n          track={track}\n          key={track.uri}\n          chooseTrack={chooseTrack}\n        />\n      ))}\n\n      {/* <Player accessToken={accessToken} trackUri={playingTrack?.uri} /> */}\n      <div className=\"dashboard__top\">\n        <Routes>\n          <Route\n            path=\"/top-artists\"\n            element={\n              <div className=\"dashboard__artists\">\n                {selectedTimeRange === \"short_term\" &&\n                  topArtistsShort.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topArtistsMedium.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topArtistsLong.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-tracks\"\n            element={\n              <div className=\"dashboard__tracks\">\n                {selectedTimeRange === \"short_term\" &&\n                  topTracksShort.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topTracksMedium.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topTracksLong.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-genres\"\n            element={\n              <div className=\"dashboard__genres\">\n                {selectedTimeRange === \"short_term\" &&\n                  topGenresShort.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}</span>\n                      <span className=\"genre__title\">{genre}</span>\n                      <progress value={genre.count} max=\"100\"></progress>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topGenresMedium.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}</span>\n                      <span className=\"genre__title\">{genre}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topGenresLong.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}</span>\n                      <span className=\"genre__title\">{genre}</span>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/recently-played\"\n            element={\n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}