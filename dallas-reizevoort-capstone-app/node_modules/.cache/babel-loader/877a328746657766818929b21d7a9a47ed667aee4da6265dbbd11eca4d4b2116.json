{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nfunction Player({\n  accessToken,\n  trackId\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  useEffect(() => {\n    if (!accessToken) return;\n\n    // Create a new player\n    const newPlayer = new window.Spotify.Player({\n      name: 'Web Playback SDK Player',\n      getOAuthToken: cb => {\n        cb(accessToken);\n      }\n    });\n\n    // Error handling\n    newPlayer.addListener('initialization_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    newPlayer.addListener('authentication_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    newPlayer.addListener('account_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    newPlayer.addListener('playback_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n\n    // Playback status updates\n    newPlayer.addListener('player_state_changed', state => {\n      console.log(state);\n    });\n\n    // Ready\n    newPlayer.addListener('ready', ({\n      device_id\n    }) => {\n      console.log('Ready with Device ID', device_id);\n      setPlayer(newPlayer);\n    });\n\n    // Not Ready\n    newPlayer.addListener('not_ready', ({\n      device_id\n    }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    // Connect to the player\n    newPlayer.connect();\n    return () => {\n      // Clean up on unmount\n      newPlayer.disconnect();\n    };\n  }, [accessToken]);\n  useEffect(() => {\n    if (!player) return;\n    if (!trackId) return;\n\n    // Play the track\n    player._options.getOAuthToken(access_token => {\n      fetch(`https://api.spotify.com/v1/me/player/play?device_id=${player._options.id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          uris: [`spotify:track:${trackId}`]\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n    });\n  }, [player, trackId]);\n  return null; // This component does not render anything\n}\n_s(Player, \"iNRC7XIAs1kljPy0aLkR3y2W4C0=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useEffect","useState","Player","accessToken","trackId","_s","player","setPlayer","newPlayer","window","Spotify","name","getOAuthToken","cb","addListener","message","console","error","state","log","device_id","connect","disconnect","_options","access_token","fetch","id","method","body","JSON","stringify","uris","headers","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/SpotifyPlayer/SpotifyPlayer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Player({ accessToken, trackId }) {\n  const [player, setPlayer] = useState(null);\n\n  useEffect(() => {\n    if (!accessToken) return;\n\n    // Create a new player\n    const newPlayer = new window.Spotify.Player({\n      name: 'Web Playback SDK Player',\n      getOAuthToken: cb => { cb(accessToken); }\n    });\n\n    // Error handling\n    newPlayer.addListener('initialization_error', ({ message }) => { console.error(message); });\n    newPlayer.addListener('authentication_error', ({ message }) => { console.error(message); });\n    newPlayer.addListener('account_error', ({ message }) => { console.error(message); });\n    newPlayer.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    newPlayer.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    newPlayer.addListener('ready', ({ device_id }) => {\n      console.log('Ready with Device ID', device_id);\n      setPlayer(newPlayer);\n    });\n\n    // Not Ready\n    newPlayer.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    // Connect to the player\n    newPlayer.connect();\n\n    return () => {\n      // Clean up on unmount\n      newPlayer.disconnect();\n    };\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!player) return;\n    if (!trackId) return;\n\n    // Play the track\n    player._options.getOAuthToken(access_token => {\n      fetch(`https://api.spotify.com/v1/me/player/play?device_id=${player._options.id}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris: [`spotify:track:${trackId}`] }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${access_token}`\n        },\n      });\n    });\n  }, [player, trackId]);\n\n  return null; // This component does not render anything\n}\n\nexport default Player;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,MAAMA,CAAC;EAAEC,WAAW;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,WAAW,EAAE;;IAElB;IACA,MAAMK,SAAS,GAAG,IAAIC,MAAM,CAACC,OAAO,CAACR,MAAM,CAAC;MAC1CS,IAAI,EAAE,yBAAyB;MAC/BC,aAAa,EAAEC,EAAE,IAAI;QAAEA,EAAE,CAACV,WAAW,CAAC;MAAE;IAC1C,CAAC,CAAC;;IAEF;IACAK,SAAS,CAACM,WAAW,CAAC,sBAAsB,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;IAC3FP,SAAS,CAACM,WAAW,CAAC,sBAAsB,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;IAC3FP,SAAS,CAACM,WAAW,CAAC,eAAe,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;IACpFP,SAAS,CAACM,WAAW,CAAC,gBAAgB,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;;IAErF;IACAP,SAAS,CAACM,WAAW,CAAC,sBAAsB,EAAEI,KAAK,IAAI;MAAEF,OAAO,CAACG,GAAG,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;;IAE/E;IACAV,SAAS,CAACM,WAAW,CAAC,OAAO,EAAE,CAAC;MAAEM;IAAU,CAAC,KAAK;MAChDJ,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAEC,SAAS,CAAC;MAC9Cb,SAAS,CAACC,SAAS,CAAC;IACtB,CAAC,CAAC;;IAEF;IACAA,SAAS,CAACM,WAAW,CAAC,WAAW,EAAE,CAAC;MAAEM;IAAU,CAAC,KAAK;MACpDJ,OAAO,CAACG,GAAG,CAAC,4BAA4B,EAAEC,SAAS,CAAC;IACtD,CAAC,CAAC;;IAEF;IACAZ,SAAS,CAACa,OAAO,CAAC,CAAC;IAEnB,OAAO,MAAM;MACX;MACAb,SAAS,CAACc,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACnB,WAAW,CAAC,CAAC;EAEjBH,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,MAAM,EAAE;IACb,IAAI,CAACF,OAAO,EAAE;;IAEd;IACAE,MAAM,CAACiB,QAAQ,CAACX,aAAa,CAACY,YAAY,IAAI;MAC5CC,KAAK,CAAE,uDAAsDnB,MAAM,CAACiB,QAAQ,CAACG,EAAG,EAAC,EAAE;QACjFC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAE,CAAE,iBAAgB3B,OAAQ,EAAC;QAAE,CAAC,CAAC;QAC5D4B,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASR,YAAa;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAAClB,MAAM,EAAEF,OAAO,CAAC,CAAC;EAErB,OAAO,IAAI,CAAC,CAAC;AACf;AAACC,EAAA,CA3DQH,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AA6Df,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}