{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport Artists from \"../Artists/Artists\";\nimport Tracks from \"../Tracks/Tracks\";\nimport Genres from \"../Genres/Genres\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard/artists\",\n          element: /*#__PURE__*/_jsxDEV(Artists, {\n            accessToken: accessToken,\n            selectedTimeRange: selectedTimeRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard/tracks\",\n          element: /*#__PURE__*/_jsxDEV(Tracks, {\n            accessToken: accessToken,\n            selectedTimeRange: selectedTimeRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard/genres\",\n          element: /*#__PURE__*/_jsxDEV(Genres, {\n            accessToken: accessToken,\n            selectedTimeRange: selectedTimeRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recently-played\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__recents\",\n            children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.track.album.images[0].url,\n                alt: track.track.name,\n                className: \"track__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__title\",\n                children: track.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"wt9gaHAcF7Mos61dnksJlswaZQQ=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","Artists","Tracks","Genres","Routes","Route","SpotifyIcon","jsxDEV","_jsxDEV","Dashboard","code","_s","accessToken","recentlyPlayed","setRecentlyPlayed","recentlyPlayedTracks","setRecentlyPlayedTracks","selectedTimeRange","setSelectedTimeRange","spotifyApi","clientId","current","setAccessToken","timeRanges","forEach","timeRange","getMyTopArtists","time_range","limit","then","res","topGenres","calculateTopGenres","body","items","setTopGenresShort","setTopGenresMedium","setTopGenresLong","getMyRecentlyPlayedTracks","response","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","path","element","map","track","index","src","album","images","url","alt","name","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport Artists from \"../Artists/Artists\";\nimport Tracks from \"../Tracks/Tracks\";\nimport Genres from \"../Genres/Genres\";\n\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange, limit: 50 })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n      <section className=\"dashboard__hero\">\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"short_term\")}\n        >\n          Past 4 weeks\n        </button>\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"medium_term\")}\n        >\n          Past 6 months\n        </button>\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"long_term\")}\n        >\n          All time\n        </button>\n      </section>\n\n      <div className=\"dashboard__top\">\n        <Routes>\n          <Route\n            path=\"/dashboard/artists\"\n            element={\n              <Artists\n                accessToken={accessToken}\n                selectedTimeRange={selectedTimeRange}\n              />\n            }\n          />\n          <Route\n            path=\"/dashboard/tracks\"\n            element={\n              <Tracks\n                accessToken={accessToken}\n                selectedTimeRange={selectedTimeRange}\n              />\n            }\n          />\n          <Route\n            path=\"/dashboard/genres\"\n            element={\n              <Genres\n                accessToken={accessToken}\n                selectedTimeRange={selectedTimeRange}\n              />\n            }\n          />\n          <Route\n            path=\"/recently-played\"\n            element={\n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}