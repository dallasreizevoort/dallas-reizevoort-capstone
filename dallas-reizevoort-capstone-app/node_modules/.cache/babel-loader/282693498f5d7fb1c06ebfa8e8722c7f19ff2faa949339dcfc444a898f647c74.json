{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [data, setData] = useState({\n    artists: {\n      short: [],\n      medium: [],\n      long: []\n    },\n    tracks: {\n      short: [],\n      medium: [],\n      long: []\n    },\n    genres: {\n      short: [],\n      medium: [],\n      long: []\n    }\n  });\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  const cancel = useRef(false);\n  const debounceTimeoutRef = useRef(null);\n  const fetchData = async (type, timeRange) => {\n    const response = await spotifyApi.current[`getMyTop${type.charAt(0).toUpperCase() + type.slice(1)}`]({\n      time_range: timeRange,\n      limit: 50\n    });\n    setData(prevData => ({\n      ...prevData,\n      [type]: {\n        ...prevData[type],\n        [timeRange]: response.body.items\n      }\n    }));\n  };\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    const types = ['artists', 'tracks'];\n    const timeRanges = ['short', 'medium', 'long'];\n    types.forEach(type => {\n      timeRanges.forEach(timeRange => {\n        fetchData(type, `${timeRange}_term`);\n      });\n    });\n  }, [accessToken]);\n\n  // ... rest of the code remains the same\n\n  useEffect(() => {\n    cancel.current = false;\n    if (!search) return setSearchResults([]);\n    if (!accessToken || !spotifyApi.current.getAccessToken()) return;\n    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n    debounceTimeoutRef.current = setTimeout(() => {\n      spotifyApi.current.searchTracks(search).then(res => {\n        if (cancel.current) return;\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.album.images[0]);\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url // Removed the trailing period here\n          };\n        }));\n      });\n    }, 300);\n    return () => {\n      if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n      cancel.current = true;\n    };\n  }, [search, accessToken]);\n  const handleSearch = e => {\n    e.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   spotifyApi.current.setAccessToken(accessToken);\n  //   spotifyApi.current.getMyTopArtists().then((res) => {\n  //     setTopArtists(res.body.items);\n\n  //     const allGenres = res.body.items.flatMap((artist) => artist.genres);\n  //     const genreCount = allGenres.reduce((acc, genre) => {\n  //       acc[genre] = (acc[genre] || 0) + 1;\n  //       return acc;\n  //     }, {});\n  //     const topGenres = Object.entries(genreCount)\n  //       .sort((a, b) => b[1] - a[1])\n  //       .slice(0, 5)\n  //       .map(([genre]) => genre);\n  //     setTopGenres(topGenres);\n  //   });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Define a helper function to calculate top genres\n    // const calculateTopGenres = (artists) => {\n    //   const allGenres = artists.flatMap((artist) => artist.genres);\n    //   const genreCount = allGenres.reduce((acc, genre) => {\n    //     acc[genre] = (acc[genre] || 0) + 1;\n    //     return acc;\n    //   }, {});\n    //   return Object.entries(genreCount)\n    //     .sort((a, b) => b[1] - a[1])\n    //     .map(([genre]) => genre);\n    // };\n\n    const calculateTopGenres = artists => {\n      const allGenres = artists.flatMap(artist => artist.genres);\n      return allGenres;\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n    spotifyApi.current.getMyTopTracks({\n      limit: 50\n    }).then(res => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"short_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksShort(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"medium_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksMedium(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksLong(res.body.items);\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n      track: track,\n      chooseTrack: chooseTrack\n    }, track.uri, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-artists\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__artists\",\n            children: [selectedTimeRange === \"short_term\" && topArtistsShort.map((artist, index) => {\n              var _artist$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$ = artist.images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 3\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topArtistsMedium.map((artist, index) => {\n              var _artist$images$2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$2 = artist.images[0]) === null || _artist$images$2 === void 0 ? void 0 : _artist$images$2.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 3\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topArtistsLong.map((artist, index) => {\n              var _artist$images$3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$3 = artist.images[0]) === null || _artist$images$3 === void 0 ? void 0 : _artist$images$3.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 3\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-tracks\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__tracks\",\n            children: [selectedTimeRange === \"short_term\" && topTracksShort.map((track, index) => {\n              var _track$album, _track$album$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 3\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topTracksMedium.map((track, index) => {\n              var _track$album2, _track$album2$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images$ = _track$album2.images[0]) === null || _track$album2$images$ === void 0 ? void 0 : _track$album2$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 1\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topTracksLong.map((track, index) => {\n              var _track$album3, _track$album3$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album3 = track.album) === null || _track$album3 === void 0 ? void 0 : (_track$album3$images$ = _track$album3.images[0]) === null || _track$album3$images$ === void 0 ? void 0 : _track$album3$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(', ')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 1\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-genres\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__genres\",\n            children: [selectedTimeRange === \"short_term\" && topGenresShort.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                value: genre.count,\n                max: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this)), selectedTimeRange === \"medium_term\" && topGenresMedium.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 21\n            }, this)), selectedTimeRange === \"long_term\" && topGenresLong.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recently-played\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__recents\",\n            children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.track.album.images[0].url,\n                alt: track.track.name,\n                className: \"track__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__title\",\n                children: track.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"jPfhYE/M2+gWQTMIE5JT6Q1/Bo0=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","TrackSearchResult","Player","Header","Routes","Route","SpotifyIcon","jsxDEV","_jsxDEV","Dashboard","code","_s","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","data","setData","artists","short","medium","long","tracks","genres","recentlyPlayed","setRecentlyPlayed","selectedTimeRange","setSelectedTimeRange","chooseTrack","track","spotifyApi","clientId","cancel","debounceTimeoutRef","fetchData","type","timeRange","response","current","charAt","toUpperCase","slice","time_range","limit","prevData","body","items","setAccessToken","types","timeRanges","forEach","getAccessToken","clearTimeout","setTimeout","searchTracks","then","res","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","name","title","uri","albumUrl","url","handleSearch","e","preventDefault","calculateTopGenres","allGenres","flatMap","getMyTopArtists","topGenres","setTopGenresShort","setTopGenresMedium","setTopGenresLong","getMyTopTracks","setTopTracks","console","log","setTopTracksShort","setTopTracksMedium","setTopTracksLong","getMyRecentlyPlayedTracks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","path","element","topArtistsShort","index","_artist$images$","src","alt","href","external_urls","spotify","target","rel","topArtistsMedium","_artist$images$2","topArtistsLong","_artist$images$3","topTracksShort","_track$album","_track$album$images$","join","topTracksMedium","_track$album2","_track$album2$images$","topTracksLong","_track$album3","_track$album3$images$","topGenresShort","genre","value","count","max","topGenresMedium","topGenresLong","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [data, setData] = useState({\n    artists: { short: [], medium: [], long: [] },\n    tracks: { short: [], medium: [], long: [] },\n    genres: { short: [], medium: [], long: [] },\n  });\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n  const cancel = useRef(false);\n  const debounceTimeoutRef = useRef(null);\n\n  const fetchData = async (type, timeRange) => {\n    const response = await spotifyApi.current[`getMyTop${type.charAt(0).toUpperCase() + type.slice(1)}`]({ time_range: timeRange, limit: 50 });\n    setData(prevData => ({ ...prevData, [type]: { ...prevData[type], [timeRange]: response.body.items } }));\n  };\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    const types = ['artists', 'tracks'];\n    const timeRanges = ['short', 'medium', 'long'];\n\n    types.forEach(type => {\n      timeRanges.forEach(timeRange => {\n        fetchData(type, `${timeRange}_term`);\n      });\n    });\n  }, [accessToken]);\n\n  // ... rest of the code remains the same\n\n\n  useEffect(() => {\n    cancel.current = false;\n    if (!search) return setSearchResults([]);\n    if (!accessToken || !spotifyApi.current.getAccessToken()) return;\n    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n    debounceTimeoutRef.current = setTimeout(() => {\n      spotifyApi.current.searchTracks(search).then((res) => {\n        if (cancel.current) return;\n        setSearchResults(\n          res.body.tracks.items.map((track) => {\n            const smallestAlbumImage = track.album.images.reduce(\n              (smallest, image) => {\n                if (image.height < smallest.height) return image;\n                return smallest;\n              },\n              track.album.images[0]\n            );\n            return {\n              artist: track.artists[0].name,\n              title: track.name,\n              uri: track.uri,\n              albumUrl: smallestAlbumImage.url, // Removed the trailing period here\n            };\n          })\n        );\n      });\n    }, 300);\n    return () => {\n      if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n      cancel.current = true;\n    };\n  }, [search, accessToken]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   spotifyApi.current.setAccessToken(accessToken);\n  //   spotifyApi.current.getMyTopArtists().then((res) => {\n  //     setTopArtists(res.body.items);\n\n  //     const allGenres = res.body.items.flatMap((artist) => artist.genres);\n  //     const genreCount = allGenres.reduce((acc, genre) => {\n  //       acc[genre] = (acc[genre] || 0) + 1;\n  //       return acc;\n  //     }, {});\n  //     const topGenres = Object.entries(genreCount)\n  //       .sort((a, b) => b[1] - a[1])\n  //       .slice(0, 5)\n  //       .map(([genre]) => genre);\n  //     setTopGenres(topGenres);\n  //   });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Define a helper function to calculate top genres\n    // const calculateTopGenres = (artists) => {\n    //   const allGenres = artists.flatMap((artist) => artist.genres);\n    //   const genreCount = allGenres.reduce((acc, genre) => {\n    //     acc[genre] = (acc[genre] || 0) + 1;\n    //     return acc;\n    //   }, {});\n    //   return Object.entries(genreCount)\n    //     .sort((a, b) => b[1] - a[1])\n    //     .map(([genre]) => genre);\n    // };\n\n    const calculateTopGenres = (artists) => {\n      const allGenres = artists.flatMap((artist) => artist.genres);\n      return allGenres;\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange, limit: 50 })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n\n    spotifyApi.current.getMyTopTracks({ limit: 50 }).then((res) => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n\n      spotifyApi.current\n      .getMyTopTracks({ time_range: \"short_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksShort(res.body.items);\n        });\n      spotifyApi.current\n      .getMyTopTracks({ time_range: \"medium_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksMedium(res.body.items);\n        });\n      spotifyApi.current\n      .getMyTopTracks({ time_range: \"long_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksLong(res.body.items);\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n      <Header />\n      <section className=\"dashboard__hero\">\n        <button className=\"dashboard__btn\" onClick={() => setSelectedTimeRange(\"short_term\")}>\n          Past 4 weeks\n        </button>\n        <button className=\"dashboard__btn\" onClick={() => setSelectedTimeRange(\"medium_term\")}>\n          Past 6 months\n        </button>\n        <button className=\"dashboard__btn\" onClick={() => setSelectedTimeRange(\"long_term\")}>\n          All time\n        </button>\n\n      </section>\n      <div className=\"dashboard__songs\"></div>\n      {searchResults.map((track) => (\n        <TrackSearchResult\n          track={track}\n          key={track.uri}\n          chooseTrack={chooseTrack}\n        />\n      ))}\n\n      {/* <Player accessToken={accessToken} trackUri={playingTrack?.uri} /> */}\n      <div className=\"dashboard__top\">\n        <Routes>\n          <Route\n            path=\"/top-artists\"\n            element={\n              <div className=\"dashboard__artists\">\n                {selectedTimeRange === \"short_term\" &&\n                  topArtistsShort.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                      <span className=\"artist__rank\">{index + 1}</span>\n                      <img\n                        src={artist.images[0]?.url}\n                        alt={artist.name}\n                        className=\"artist__image\"\n                      />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                      <a href={artist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\" className=\"artist__btn\">\n  <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n</a>\n                    </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topArtistsMedium.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                      <span className=\"artist__rank\">{index + 1}</span>\n                      <img\n                        src={artist.images[0]?.url}\n                        alt={artist.name}\n                        className=\"artist__image\"\n                      />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                      <a href={artist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\" className=\"artist__btn\">\n  <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n</a>\n                    </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topArtistsLong.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                      <span className=\"artist__rank\">{index + 1}</span>\n                      <img\n                        src={artist.images[0]?.url}\n                        alt={artist.name}\n                        className=\"artist__image\"\n                      />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                      <a href={artist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\" className=\"artist__btn\">\n  <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n</a>\n                    </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-tracks\"\n            element={\n              <div className=\"dashboard__tracks\">\n                {selectedTimeRange === \"short_term\" &&\n                  topTracksShort.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                      <span className=\"track__rank\">{index + 1}</span>\n                      <img\n                        src={track.album?.images[0]?.url}\n                        alt={track.name}\n                        className=\"track__image\"\n                      />\n                      <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                      \n                      <span className=\"track__artist\">\n                      {track.artists.map(artist => artist.name).join(', ')}\n                      </span>\n                      </div>\n                      <div className=\"track__link\">\n                      <a href={track.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n  <img src={SpotifyIcon} alt=\"Spotify Icon\" className=\"track__icon\" />\n</a>\n                    </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topTracksMedium.map((track, index) => (\n                    <div key={index} className=\"track\">\n                    <div className=\"track__container\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.album?.images[0]?.url}\n                      alt={track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.name}</span>\n                    </div>\n                    <div className=\"track__container\">\n                    \n                    <span className=\"track__artist\">\n                    {track.artists.map(artist => artist.name).join(', ')}\n                    </span>\n                    </div>\n                    <div className=\"track__link\">\n                    <a href={track.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n<img src={SpotifyIcon} alt=\"Spotify Icon\" className=\"track__icon\" />\n</a>\n                  </div>\n                  </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topTracksLong.map((track, index) => (\n                    <div key={index} className=\"track\">\n                    <div className=\"track__container\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.album?.images[0]?.url}\n                      alt={track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.name}</span>\n                    </div>\n                    <div className=\"track__container\">\n                    \n                    <span className=\"track__artist\">\n                    {track.artists.map(artist => artist.name).join(', ')}\n                    </span>\n                    </div>\n                    <div className=\"track__link\">\n                    <a href={track.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n<img src={SpotifyIcon} alt=\"Spotify Icon\" className=\"track__icon\" />\n</a>\n                  </div>\n                  </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-genres\"\n            element={\n              <div className=\"dashboard__genres\">\n              {selectedTimeRange === \"short_term\" &&\n                topGenresShort.map((genre, index) => (\n                  <div key={index} className=\"genre\">\n                    <span className=\"genre__rank\">{index + 1}</span>\n                    <span className=\"genre__title\">{genre}</span>\n                    <progress value={genre.count} max=\"100\"></progress>\n                  </div>\n                ))\n              }\n                {selectedTimeRange === \"medium_term\" &&\n                  topGenresMedium.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}</span>\n                      <span className=\"genre__title\">{genre}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topGenresLong.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}</span>\n                      <span className=\"genre__title\">{genre}</span>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/recently-played\"\n            element={\n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}