{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [topArtists, setTopArtists] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  const cancel = useRef(false);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"short_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsShort(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"medium_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsMedium(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"long_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsLong(res.body.items);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    const calculateTopGenres = artists => {\n      const allGenres = artists.flatMap(artist => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n    console.log(\"API\", spotifyApi);\n    spotifyApi.current.getMyTopTracks({\n      limit: 50\n    }).then(res => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"short_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksShort(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"medium_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksMedium(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksLong(res.body.items);\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [selectedCategory && selectedCategory !== \"recently-played\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-artists\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__artists\",\n            children: [selectedTimeRange === \"short_term\" && topArtistsShort.map((artist, index) => {\n              var _artist$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$ = artist.images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topArtistsMedium.map((artist, index) => {\n              var _artist$images$2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$2 = artist.images[0]) === null || _artist$images$2 === void 0 ? void 0 : _artist$images$2.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topArtistsLong.map((artist, index) => {\n              var _artist$images$3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$3 = artist.images[0]) === null || _artist$images$3 === void 0 ? void 0 : _artist$images$3.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-tracks\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__tracks\",\n            children: [selectedTimeRange === \"short_term\" && topTracksShort.map((track, index) => {\n              var _track$album, _track$album$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topTracksMedium.map((track, index) => {\n              var _track$album2, _track$album2$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images$ = _track$album2.images[0]) === null || _track$album2$images$ === void 0 ? void 0 : _track$album2$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topTracksLong.map((track, index) => {\n              var _track$album3, _track$album3$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album3 = track.album) === null || _track$album3 === void 0 ? void 0 : (_track$album3$images$ = _track$album3.images[0]) === null || _track$album3$images$ === void 0 ? void 0 : _track$album3$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-genres\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__genres\",\n            children: [selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresShort.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"genre__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"genre__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"genre__title\",\n                    children: genre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresShort.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 25\n              }, this))\n            }, void 0, false), selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresMedium.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__rank\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__title\",\n                  children: genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresMedium.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 25\n              }, this))\n            }, void 0, false), selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresLong.map(([genre, count], index) => (console.log(\"count\", count), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__rank\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__title\",\n                  children: genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresLong.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 31\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 29\n              }, this)))\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recently-played\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__recents\",\n            children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.track.album.images[0].url,\n                alt: track.track.name,\n                className: \"track__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__title\",\n                children: track.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"GNpjv0JYIyBnr7OSUNKCCZcnums=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","Routes","Route","SpotifyIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","code","_s","accessToken","topArtists","setTopArtists","topTracks","setTopTracks","recentlyPlayed","setRecentlyPlayed","recentlyPlayedTracks","setRecentlyPlayedTracks","topArtistsShort","setTopArtistsShort","topArtistsMedium","setTopArtistsMedium","topArtistsLong","setTopArtistsLong","topTracksShort","setTopTracksShort","topTracksMedium","setTopTracksMedium","topTracksLong","setTopTracksLong","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","selectedTimeRange","setSelectedTimeRange","spotifyApi","clientId","cancel","current","setAccessToken","getMyTopArtists","time_range","limit","then","res","body","items","calculateTopGenres","artists","allGenres","flatMap","artist","genres","genreCounts","reduce","counts","genre","Object","entries","sort","a","b","slice","timeRanges","forEach","timeRange","topGenres","console","log","getMyTopTracks","getMyRecentlyPlayedTracks","response","className","children","selectedCategory","onClick","fileName","_jsxFileName","lineNumber","columnNumber","path","element","map","index","_artist$images$","src","images","url","alt","name","href","external_urls","spotify","target","rel","_artist$images$2","_artist$images$3","track","_track$album","_track$album$images$","album","join","_track$album2","_track$album2$images$","_track$album3","_track$album3$images$","length","count","value","max","Math","_","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\n\n\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n\n  const [topArtists, setTopArtists] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n  const cancel = useRef(false);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"short_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsShort(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"medium_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsMedium(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"long_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsLong(res.body.items);\n      });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    const calculateTopGenres = (artists) => {\n      const allGenres = artists.flatMap((artist) => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange, limit: 50 })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n\n    console.log(\"API\", spotifyApi);\n\n    spotifyApi.current.getMyTopTracks({ limit: 50 }).then((res) => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"short_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksShort(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"medium_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksMedium(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"long_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksLong(res.body.items);\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n      {selectedCategory && selectedCategory !== \"recently-played\" && (\n        <section className=\"dashboard__hero\">\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"short_term\")}\n          >\n            Past 4 weeks\n          </button>\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"medium_term\")}\n          >\n            Past 6 months\n          </button>\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"long_term\")}\n          >\n            All time\n          </button>\n        </section>\n      )}\n\n      <div className=\"dashboard__top\">\n        <Routes>\n          <Route\n            path=\"/top-artists\"\n            element={\n              <div className=\"dashboard__artists\">\n                {selectedTimeRange === \"short_term\" &&\n                  topArtistsShort.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topArtistsMedium.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topArtistsLong.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-tracks\"\n            element={\n              <div className=\"dashboard__tracks\">\n                {selectedTimeRange === \"short_term\" &&\n                  topTracksShort.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topTracksMedium.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topTracksLong.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-genres\"\n            element={\n              <div className=\"dashboard__genres\">\n                {selectedTimeRange === \"short_term\" &&\n                  topGenresShort.length > 0 && (\n                    <>\n                      {topGenresShort.map(([genre, count], index) => (\n                        <div key={index} className=\"genre\">\n                          <div className=\"genre__container\">\n                            <span className=\"genre__rank\">{index + 1}</span>\n                            <span className=\"genre__title\">{genre}</span>\n                          </div>\n                          <progress\n                            value={count}\n                            max={Math.max(\n                              ...topGenresShort.map(([_, count]) => count)\n                            )}\n                          ></progress>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                {selectedTimeRange === \"medium_term\" &&\n                  topGenresMedium.length > 0 && (\n                    <>\n                      {topGenresMedium.map(([genre, count], index) => (\n                        <div key={index} className=\"genre\">\n                          <span className=\"genre__rank\">{index + 1}</span>\n                          <span className=\"genre__title\">{genre}</span>\n                          <progress\n                            value={count}\n                            max={Math.max(\n                              ...topGenresMedium.map(([_, count]) => count)\n                            )}\n                          ></progress>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                {selectedTimeRange === \"long_term\" &&\n                  topGenresLong.length > 0 && (\n                    <>\n                      {topGenresLong.map(\n                        ([genre, count], index) => (\n                          console.log(\"count\", count),\n                          (\n                            <div key={index} className=\"genre\">\n                              <span className=\"genre__rank\">{index + 1}</span>\n                              <span className=\"genre__title\">{genre}</span>\n                              <progress\n                                value={count}\n                                max={Math.max(\n                                  ...topGenresLong.map(([_, count]) => count)\n                                )}\n                              ></progress>\n                            </div>\n                          )\n                        )\n                      )}\n                    </>\n                  )}\n              </div>\n            }\n          />\n          <Route\n            path=\"/recently-played\"\n            element={\n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}