{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Mood/Mood.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mood({\n  accessToken\n}) {\n  _s();\n  const ref = useRef();\n  const spotifyApi = useRef(new SpotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(() => {\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Fetch the user's listening history\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      const tracks = response.body.items;\n\n      // Get the audio features for these tracks\n      return spotifyApi.current.getAudioFeaturesForTracks(tracks.map(track => track.track.id));\n    }).then(response => {\n      const audioFeatures = response.body.audio_features;\n\n      // Store the mood data in a time-series format\n      const moodData = audioFeatures.map((features, index) => ({\n        date: new Date().getTime() - index * 1000 * 60 * 60,\n        // This is a placeholder. You should use the actual play time of each track.\n        valence: features.valence\n      }));\n\n      // Create the line chart with D3.js\n      const svg = d3.select(ref.current);\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 50,\n        left: 50\n      };\n      const width = 960 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n      const xScale = d3.scaleTime().domain(d3.extent(moodData, d => d.date)).range([0, width]);\n      const yScale = d3.scaleLinear().domain([0, 1]).range([height, 0]);\n      const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.valence));\n      const g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n      g.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(xScale)).append('text').attr('fill', '#000').attr('y', 20).attr('x', width / 2).attr('dy', '0.71em').attr('text-anchor', 'end').text('Time');\n      g.append('g').call(d3.axisLeft(yScale)).append('text').attr('fill', '#000').attr('transform', 'rotate(-90)').attr('y', -40).attr('dy', '0.71em').attr('text-anchor', 'end').text('Mood (valence)');\n      g.append('path').datum(moodData).attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('d', line);\n      svg.append('text').attr('x', width / 2).attr('y', 20).attr('text-anchor', 'middle').style('font-size', '20px').style('text-decoration', 'underline').text('Mood Over Time');\n    }).catch(err => {\n      console.error('Something went wrong:', err);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref,\n    width: \"960\",\n    height: \"500\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 12\n  }, this);\n}\n_s(Mood, \"DPQ0+wisHBllscv5YB3Te63pQiY=\");\n_c = Mood;\nexport default Mood;\nvar _c;\n$RefreshReg$(_c, \"Mood\");","map":{"version":3,"names":["React","useEffect","useRef","d3","SpotifyWebApi","jsxDEV","_jsxDEV","Mood","accessToken","_s","ref","spotifyApi","clientId","current","setAccessToken","getMyRecentlyPlayedTracks","limit","then","response","tracks","body","items","getAudioFeaturesForTracks","map","track","id","audioFeatures","audio_features","moodData","features","index","date","Date","getTime","valence","svg","select","margin","top","right","bottom","left","width","height","xScale","scaleTime","domain","extent","d","range","yScale","scaleLinear","line","x","y","g","append","attr","call","axisBottom","text","axisLeft","datum","style","catch","err","console","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Mood/Mood.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nfunction Mood({ accessToken }) {\n    const ref = useRef();\n    const spotifyApi = useRef(\n        new SpotifyWebApi({\n            clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n        })\n    );\n\n    useEffect(() => {\n        spotifyApi.current.setAccessToken(accessToken);\n\n        // Fetch the user's listening history\n        spotifyApi.current.getMyRecentlyPlayedTracks({ limit: 50 })\n            .then(response => {\n                const tracks = response.body.items;\n\n                // Get the audio features for these tracks\n                return spotifyApi.current.getAudioFeaturesForTracks(tracks.map(track => track.track.id));\n            })\n            .then(response => {\n                const audioFeatures = response.body.audio_features;\n\n                // Store the mood data in a time-series format\n                const moodData = audioFeatures.map((features, index) => ({\n                    date: new Date().getTime() - index * 1000 * 60 * 60, // This is a placeholder. You should use the actual play time of each track.\n                    valence: features.valence\n                }));\n\n                // Create the line chart with D3.js\n                const svg = d3.select(ref.current);\n                const margin = {top: 20, right: 20, bottom: 50, left: 50};\n                const width = 960 - margin.left - margin.right;\n                const height = 500 - margin.top - margin.bottom;\n\n                const xScale = d3.scaleTime().domain(d3.extent(moodData, d => d.date)).range([0, width]);\n                const yScale = d3.scaleLinear().domain([0, 1]).range([height, 0]);\n\n                const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.valence));\n\n                const g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n                g.append('g')\n                    .attr('transform', 'translate(0,' + height + ')')\n                    .call(d3.axisBottom(xScale))\n                    .append('text')\n                    .attr('fill', '#000')\n                    .attr('y', 20)\n                    .attr('x', width / 2)\n                    .attr('dy', '0.71em')\n                    .attr('text-anchor', 'end')\n                    .text('Time');\n\n                g.append('g')\n                    .call(d3.axisLeft(yScale))\n                    .append('text')\n                    .attr('fill', '#000')\n                    .attr('transform', 'rotate(-90)')\n                    .attr('y', -40)\n                    .attr('dy', '0.71em')\n                    .attr('text-anchor', 'end')\n                    .text('Mood (valence)');\n\n                g.append('path')\n                    .datum(moodData)\n                    .attr('fill', 'none')\n                    .attr('stroke', 'steelblue')\n                    .attr('stroke-width', 1.5)\n                    .attr('d', line);\n\n                svg.append('text')\n                    .attr('x', (width / 2))             \n                    .attr('y', 20)\n                    .attr('text-anchor', 'middle')  \n                    .style('font-size', '20px') \n                    .style('text-decoration', 'underline')  \n                    .text('Mood Over Time');\n            })\n            .catch(err => {\n                console.error('Something went wrong:', err);\n            });\n    }, [accessToken]);\n\n    return <svg ref={ref} width=\"960\" height=\"500\" />;\n}\n\nexport default Mood;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}