{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/Auth/AuthContext.js\",\n  _s = $RefreshSig$();\n// AuthContext.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n/*\nCurrently using URLSearchParams to get code from URL. This is not secure and causes many issues \nwith routing/refresh.\nNeed a better way to handle access/refresh token. local/session storage also has security risks.\nMaybe use HTTP-Only cookies? or store everything in server-side session.\nWill Update.\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nfunction AuthProvider({\n  children,\n  code\n}) {\n  _s();\n  const [accessToken, setAccessToken] = useState();\n  const [refreshToken, setRefreshToken] = useState();\n  const [expiresIn, setExpiresIn] = useState();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log('Running first useEffect hook');\n    console.log('Code:', code);\n    if (!code) return;\n    axios.post(\"http://localhost:3001/login\", {\n      code\n    }).then(res => {\n      console.log('Received response from /login:', res.data);\n      setAccessToken(res.data.accessToken);\n      setRefreshToken(res.data.refreshToken);\n      setExpiresIn(res.data.expiresIn);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error during axios.post call to /login:', error);\n      navigate('/');\n    });\n  }, [code]); // Removed navigate from dependencies\n\n  useEffect(() => {\n    console.log('Running second useEffect hook');\n    if (!refreshToken || !expiresIn) return;\n    const interval = setInterval(() => {\n      axios.post(\"http://localhost:3001/refresh\", {\n        refreshToken\n      }).then(res => {\n        console.log('Received response from /refresh:', res.data);\n        setAccessToken(res.data.accessToken);\n        setExpiresIn(res.data.expiresIn);\n      }).catch(error => {\n        console.error('Error during axios.post call to /refresh:', error);\n        navigate('/');\n      });\n    }, (expiresIn - 60) * 1000);\n    return () => clearInterval(interval);\n  }, [refreshToken, expiresIn]); // Removed navigate from dependencies\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      accessToken,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"p4ZriqNgbX8Cv0IuzR3Shgo01aM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthProvider };\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","createContext","AuthProvider","children","code","_s","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","loading","setLoading","navigate","console","log","post","then","res","data","catch","error","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/Auth/AuthContext.js"],"sourcesContent":["// AuthContext.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n/*\nCurrently using URLSearchParams to get code from URL. This is not secure and causes many issues \nwith routing/refresh.\nNeed a better way to handle access/refresh token. local/session storage also has security risks.\nMaybe use HTTP-Only cookies? or store everything in server-side session.\nWill Update.\n*/\n\nconst AuthContext = React.createContext();\n\nfunction AuthProvider({ children, code }) {\n    const [accessToken, setAccessToken] = useState();\n    const [refreshToken, setRefreshToken] = useState();\n    const [expiresIn, setExpiresIn] = useState();\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        console.log('Running first useEffect hook');\n        console.log('Code:', code);\n        if (!code) return;\n        axios\n            .post(\"http://localhost:3001/login\", { code })\n            .then((res) => {\n                console.log('Received response from /login:', res.data);\n                setAccessToken(res.data.accessToken);\n                setRefreshToken(res.data.refreshToken);\n                setExpiresIn(res.data.expiresIn);\n                setLoading(false);\n            })\n            .catch((error) => {\n                console.error('Error during axios.post call to /login:', error);\n                navigate('/');\n            });\n    }, [code]); // Removed navigate from dependencies\n\n    useEffect(() => {\n        console.log('Running second useEffect hook');\n        if (!refreshToken || !expiresIn) return;\n        const interval = setInterval(() => {\n            axios\n                .post(\"http://localhost:3001/refresh\", { refreshToken })\n                .then((res) => {\n                    console.log('Received response from /refresh:', res.data);\n                    setAccessToken(res.data.accessToken);\n                    setExpiresIn(res.data.expiresIn);\n                })\n                .catch((error) => {\n                    console.error('Error during axios.post call to /refresh:', error);\n                    navigate('/');\n                });\n        }, (expiresIn - 60) * 1000);\n\n        return () => clearInterval(interval);\n    }, [refreshToken, expiresIn]); // Removed navigate from dependencies\n\n    return (\n        <AuthContext.Provider value={{ accessToken, loading }}>\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport { AuthProvider };\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}