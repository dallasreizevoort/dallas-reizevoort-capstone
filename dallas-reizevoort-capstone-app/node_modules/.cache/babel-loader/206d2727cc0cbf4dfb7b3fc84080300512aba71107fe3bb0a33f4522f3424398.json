{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Genres/Genres.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from '../../Auth/AuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Genres({\n  selectedTimeRange\n}) {\n  _s();\n  const {\n    accessToken,\n    spotifyApi\n  } = useContext(AuthContext);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const calculateTopGenres = artists => {\n    const allGenres = artists.flatMap(artist => artist.genres);\n    const genreCounts = allGenres.reduce((counts, genre) => {\n      counts[genre] = (counts[genre] || 0) + 1;\n      return counts;\n    }, {});\n    return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n  };\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        limit: 50,\n        time_range: timeRange\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n  }, [accessToken, spotifyApi]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard__genres\",\n    children: [selectedTimeRange === \"short_term\" && topGenresShort.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre__rank\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre__title\",\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: count,\n        max: Math.max(...topGenresShort.map(([_, count]) => count))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)), selectedTimeRange === \"medium_term\" && topGenresMedium.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre__rank\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre__title\",\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: count,\n        max: Math.max(...topGenresMedium.map(([_, count]) => count))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)), selectedTimeRange === \"long_term\" && topGenresLong.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre__rank\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"genre__title\",\n        children: genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: count,\n        max: Math.max(...topGenresLong.map(([_, count]) => count))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Genres, \"l+0jDpM5aHM5LRxWDF5VP9V0UaI=\");\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","jsxDEV","_jsxDEV","Genres","selectedTimeRange","_s","accessToken","spotifyApi","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","calculateTopGenres","artists","allGenres","flatMap","artist","genres","genreCounts","reduce","counts","genre","Object","entries","sort","a","b","slice","current","setAccessToken","timeRanges","forEach","timeRange","getMyTopArtists","limit","time_range","then","res","topGenres","body","items","className","children","map","count","index","fileName","_jsxFileName","lineNumber","columnNumber","value","max","Math","_","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Genres/Genres.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from '../../Auth/AuthProvider';\n\nfunction Genres({ selectedTimeRange }) {\n    const { accessToken, spotifyApi } = useContext(AuthContext);\n    const [topGenresShort, setTopGenresShort] = useState([]);\n    const [topGenresMedium, setTopGenresMedium] = useState([]);\n    const [topGenresLong, setTopGenresLong] = useState([]);\n\n    const calculateTopGenres = (artists) => {\n        const allGenres = artists.flatMap((artist) => artist.genres);\n        const genreCounts = allGenres.reduce((counts, genre) => {\n          counts[genre] = (counts[genre] || 0) + 1;\n          return counts;\n        }, {});\n        return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n    };\n\n    useEffect(() => {\n        if (!accessToken) return;\n        spotifyApi.current.setAccessToken(accessToken);\n\n        const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n        timeRanges.forEach(timeRange => {\n            spotifyApi.current.getMyTopArtists({ limit: 50, time_range: timeRange })\n                .then(res => {\n                    const topGenres = calculateTopGenres(res.body.items);\n                    if (timeRange === \"short_term\") {\n                        setTopGenresShort(topGenres);\n                    } else if (timeRange === \"medium_term\") {\n                        setTopGenresMedium(topGenres);\n                    } else if (timeRange === \"long_term\") {\n                        setTopGenresLong(topGenres);\n                    }\n                });\n        });\n    }, [accessToken, spotifyApi]);\n\n    return (    \n        <div className=\"dashboard__genres\">\n            {selectedTimeRange === \"short_term\" && topGenresShort.map(([genre, count], index) => (\n                <div key={index} className=\"genre\">\n                    <span className=\"genre__rank\">{index + 1}</span>\n                    <span className=\"genre__title\">{genre}</span>\n                    <progress value={count} max={Math.max(...topGenresShort.map(([_, count]) => count))}></progress>\n                </div>\n            ))}\n            {selectedTimeRange === \"medium_term\" && topGenresMedium.map(([genre, count], index) => (\n                <div key={index} className=\"genre\">\n                    <span className=\"genre__rank\">{index + 1}</span>\n                    <span className=\"genre__title\">{genre}</span>\n                    <progress value={count} max={Math.max(...topGenresMedium.map(([_, count]) => count))}></progress>\n                </div>\n            ))}\n            {selectedTimeRange === \"long_term\" && topGenresLong.map(([genre, count], index) => (\n                <div key={index} className=\"genre\">\n                    <span className=\"genre__rank\">{index + 1}</span>\n                    <span className=\"genre__title\">{genre}</span>\n                    <progress value={count} max={Math.max(...topGenresLong.map(([_, count]) => count))}></progress>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Genres;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}