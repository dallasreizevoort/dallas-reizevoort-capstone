{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/RecentlyPlayed/RecentlyPlayed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecentlyPlayed({\n  accessToken\n}) {\n  _s();\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks().then(res => {\n      setRecentlyPlayed(res.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard__recents\",\n    children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"track__rank\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: track.track.album.images[0].url,\n        alt: track.track.name,\n        className: \"track__image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"track__title\",\n        children: track.track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(RecentlyPlayed, \"jCo+6h/xQypgXgNlz7M7Tx7JJks=\");\n_c = RecentlyPlayed;\nexport default RecentlyPlayed;\nvar _c;\n$RefreshReg$(_c, \"RecentlyPlayed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","spotifyWebApi","SpotifyIcon","jsxDEV","_jsxDEV","RecentlyPlayed","accessToken","_s","recentlyPlayed","setRecentlyPlayed","spotifyApi","clientId","current","setAccessToken","getMyRecentlyPlayedTracks","then","res","body","items","className","children","map","track","index","fileName","_jsxFileName","lineNumber","columnNumber","src","album","images","url","alt","name","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/RecentlyPlayed/RecentlyPlayed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\nfunction RecentlyPlayed({ accessToken }) {\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    spotifyApi.current.getMyRecentlyPlayedTracks().then((res) => {\n      setRecentlyPlayed(res.body.items);\n    });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard__recents\">\n      {recentlyPlayed.map((track, index) => (\n        <div key={index} className=\"recent\">\n          <span className=\"track__rank\">{index + 1}</span>\n          <img\n            src={track.track.album.images[0].url}\n            alt={track.track.name}\n            className=\"track__image\"\n          />\n          <span className=\"track__title\">{track.track.name}</span>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default RecentlyPlayed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,WAAW,MAAM,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,SAASC,cAAcA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,UAAU,GAAGV,MAAM,CACvB,IAAIC,aAAa,CAAC;IAChBU,QAAQ,EAAE;EACZ,CAAC,CACH,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,WAAW,EAAE;IAClBI,UAAU,CAACE,OAAO,CAACC,cAAc,CAACP,WAAW,CAAC;IAE9CI,UAAU,CAACE,OAAO,CAACE,yBAAyB,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAC3DP,iBAAiB,CAACO,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACZ,WAAW,CAAC,CAAC;EAEjB,oBACEF,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCZ,cAAc,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC/BnB,OAAA;MAAiBe,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACjChB,OAAA;QAAMe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEG,KAAK,GAAG;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDvB,OAAA;QACEwB,GAAG,EAAEN,KAAK,CAACA,KAAK,CAACO,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;QACrCC,GAAG,EAAEV,KAAK,CAACA,KAAK,CAACW,IAAK;QACtBd,SAAS,EAAC;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFvB,OAAA;QAAMe,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEE,KAAK,CAACA,KAAK,CAACW;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAPhDJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpB,EAAA,CAjCQF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAmCvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}