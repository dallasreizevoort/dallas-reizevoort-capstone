{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Mood/Mood.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { Chart } from \"react-google-charts\";\nimport \"./Mood.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mood({\n  accessToken\n}) {\n  _s();\n  const spotifyApi = useRef(new SpotifyWebApi({\n    clientId: process.env.REACT_APP_CLIENT_ID\n  }));\n  const [moodData, setMoodData] = React.useState([]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 30\n    }).then(response => {\n      const trackIds = response.body.items.map(item => item.track.id);\n      return spotifyApi.current.getAudioFeaturesForTracks(trackIds);\n    }).then(response => {\n      const audioFeatures = response.body.audio_features;\n      const data = audioFeatures.map((features, index) => {\n        const date = new Date(new Date().getTime() - index * 1000 * 60 * 60 * 24); // Subtract index days from current date\n        const dateString = date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: '2-digit'\n        }); // Convert date to 'MMM dd' format\n        return [dateString, features.valence];\n      }).reverse(); // Reverse the order of the data\n\n      console.log(audioFeatures);\n      setMoodData([['Time', 'Mood (valence)'], ...data]);\n    }).catch(err => {\n      console.error(\"Something went wrong:\", err);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mood__title\",\n      children: \"How happy or sad is your music?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mood__subtitle\",\n      children: \"Valence, ranging from 0.0 to 1.0, is Spotify's measure of a track's mood. High valence tracks sound positive and cheerful, while low valence tracks sound more negative and sad.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: '10px',\n          top: '50%',\n          transform: 'translateY(-50%) rotate(-90deg)',\n          color: '#FFFFFF',\n          fontFamily: 'Gotham',\n          fontSize: '13px'\n        },\n        children: \"Mood (valence)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        width: '500px',\n        height: '300px',\n        chartType: \"LineChart\",\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this),\n        data: moodData,\n        options: {\n          backgroundColor: '#191414',\n          fontName: 'Gotham',\n          fontSize: 13,\n          hAxis: {\n            title: 'Days',\n            format: 'MMM dd',\n            titleTextStyle: {\n              color: '#FFFFFF'\n            },\n            textStyle: {\n              color: '#FFFFFF'\n            },\n            gridlines: {\n              color: 'transparent'\n            }\n          },\n          vAxis: {\n            title: '',\n            titleTextStyle: {\n              color: '#FFFFFF'\n            },\n            textStyle: {\n              color: '#FFFFFF'\n            },\n            gridlines: {\n              color: 'transparent'\n            }\n          },\n          legend: {\n            position: 'top',\n            alignment: 'center',\n            textStyle: {\n              color: '#FFFFFF'\n            }\n          },\n          colors: ['#1BD760'] // Change the line color here\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mood__disclaimer\",\n      children: \"Data is based on your 30 most recently played songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Mood, \"P/czS0QsRCc7DaqmI2r50kgHues=\");\n_c = Mood;\nexport default Mood;\nvar _c;\n$RefreshReg$(_c, \"Mood\");","map":{"version":3,"names":["React","useEffect","useRef","SpotifyWebApi","Chart","jsxDEV","_jsxDEV","Mood","accessToken","_s","spotifyApi","clientId","process","env","REACT_APP_CLIENT_ID","moodData","setMoodData","useState","current","setAccessToken","getMyRecentlyPlayedTracks","limit","then","response","trackIds","body","items","map","item","track","id","getAudioFeaturesForTracks","audioFeatures","audio_features","data","features","index","date","Date","getTime","dateString","toLocaleDateString","month","day","valence","reverse","console","log","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","left","top","transform","color","fontFamily","fontSize","width","height","chartType","loader","options","backgroundColor","fontName","hAxis","title","format","titleTextStyle","textStyle","gridlines","vAxis","legend","alignment","colors","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Mood/Mood.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { Chart } from \"react-google-charts\";\nimport \"./Mood.scss\";\n\nfunction Mood({ accessToken }) {\n  const spotifyApi = useRef(\n    new SpotifyWebApi({\n      clientId: process.env.REACT_APP_CLIENT_ID,\n    })\n  );\n\n  const [moodData, setMoodData] = React.useState([]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 30 })\n      .then((response) => {\n        const trackIds = response.body.items.map(item => item.track.id);\n        return spotifyApi.current.getAudioFeaturesForTracks(trackIds);\n      })\n      .then((response) => {\n        const audioFeatures = response.body.audio_features;\n\n        const data = audioFeatures.map((features, index) => {\n          const date = new Date(new Date().getTime() - index * 1000 * 60 * 60 * 24); // Subtract index days from current date\n          const dateString = date.toLocaleDateString('en-US', { month: 'short', day: '2-digit' }); // Convert date to 'MMM dd' format\n          return [dateString, features.valence];\n        }).reverse(); // Reverse the order of the data\n        \n        console.log(audioFeatures);\n\n        setMoodData([['Time', 'Mood (valence)'], ...data]);\n      })\n      .catch((err) => {\n        console.error(\"Something went wrong:\", err);\n      });\n  }, [accessToken]);\n\n  return (\n\n    <div className=\"mood\">\n      <h1 className=\"mood__title\">How happy or sad is your music?</h1>\n      <p className=\"mood__subtitle\">Valence, ranging from 0.0 to 1.0, is Spotify's measure of a track's mood. \n      High valence tracks sound positive and cheerful, while low valence tracks sound more negative and sad.</p>\n\n    <div style={{ position: 'relative' }}>\n      <div style={{ \n        position: 'absolute', \n        left: '10px', \n        top: '50%', \n        transform: 'translateY(-50%) rotate(-90deg)', \n        color: '#FFFFFF',\n        fontFamily: 'Gotham',\n        fontSize: '13px'\n      }}>\n        Mood (valence)\n      </div>\n      <Chart\n  width={'500px'}\n  height={'300px'}\n  chartType=\"LineChart\"\n  loader={<div>Loading Chart</div>}\n  data={moodData}\n  options={{\n    backgroundColor: '#191414',\n    fontName: 'Gotham',\n    fontSize: 13,\n    hAxis: {\n      title: 'Days',\n      format: 'MMM dd',\n      titleTextStyle: { color: '#FFFFFF' },\n      textStyle: { color: '#FFFFFF' },\n      gridlines: { color: 'transparent' },\n    },\n    vAxis: {\n      title: '',\n      titleTextStyle: { color: '#FFFFFF' },\n      textStyle: { color: '#FFFFFF' },\n      gridlines: { color: 'transparent' },\n    },\n    legend: { \n      position: 'top',\n      alignment: 'center',\n      textStyle: { color: '#FFFFFF' } \n    },\n    colors: ['#1BD760'], // Change the line color here\n  }}\n/>\n    </div>\n    <p className=\"mood__disclaimer\">Data is based on your 30 most recently played songs</p>\n    </div>\n  );\n}\n\nexport default Mood;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}