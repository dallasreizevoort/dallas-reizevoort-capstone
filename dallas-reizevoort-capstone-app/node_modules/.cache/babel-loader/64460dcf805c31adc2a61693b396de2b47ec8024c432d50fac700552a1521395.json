{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [searchResults, setSearchResults] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"short_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsShort(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"medium_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsMedium(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"long_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsLong(res.body.items);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    const calculateTopGenres = artists => {\n      const allGenres = artists.flatMap(artist => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n    console.log('API', spotifyApi);\n    spotifyApi.current.getMyTopTracks({\n      limit: 50\n    }).then(res => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"short_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksShort(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"medium_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksMedium(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksLong(res.body.items);\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onCategorySelect: setSelectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), selectedCategory && selectedCategory !== 'recently-played' && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n      track: track,\n      chooseTrack: chooseTrack\n    }, track.uri, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-artists\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__artists\",\n            children: [selectedTimeRange === \"short_term\" && topArtistsShort.map((artist, index) => {\n              var _artist$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$ = artist.images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topArtistsMedium.map((artist, index) => {\n              var _artist$images$2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$2 = artist.images[0]) === null || _artist$images$2 === void 0 ? void 0 : _artist$images$2.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topArtistsLong.map((artist, index) => {\n              var _artist$images$3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"artist__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_artist$images$3 = artist.images[0]) === null || _artist$images$3 === void 0 ? void 0 : _artist$images$3.url,\n                    alt: artist.name,\n                    className: \"artist__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"artist__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: artist.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: \"artist__btn\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-tracks\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__tracks\",\n            children: [selectedTimeRange === \"short_term\" && topTracksShort.map((track, index) => {\n              var _track$album, _track$album$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topTracksMedium.map((track, index) => {\n              var _track$album2, _track$album2$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images$ = _track$album2.images[0]) === null || _track$album2$images$ === void 0 ? void 0 : _track$album2$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topTracksLong.map((track, index) => {\n              var _track$album3, _track$album3$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album3 = track.album) === null || _track$album3 === void 0 ? void 0 : (_track$album3$images$ = _track$album3.images[0]) === null || _track$album3$images$ === void 0 ? void 0 : _track$album3$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-genres\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__genres\",\n            children: [selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresShort.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"genre__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"genre__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"genre__title\",\n                    children: genre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresShort.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 11\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 9\n              }, this))\n            }, void 0, false), selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresMedium.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__rank\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__title\",\n                  children: genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresMedium.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 11\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 9\n              }, this))\n            }, void 0, false), selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresLong.map(([genre, count], index) => (console.log(\"count\", count), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__rank\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__title\",\n                  children: genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresLong.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 11\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 9\n              }, this)))\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recently-played\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__recents\",\n            children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.track.album.images[0].url,\n                alt: track.track.name,\n                className: \"track__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__title\",\n                children: track.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"TbGLGmettgCVB/0Q4cab1+U0nOQ=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","TrackSearchResult","Player","Header","Routes","Route","SpotifyIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","code","_s","accessToken","searchResults","setSearchResults","topTracks","setTopTracks","recentlyPlayed","setRecentlyPlayed","recentlyPlayedTracks","setRecentlyPlayedTracks","topArtistsShort","setTopArtistsShort","topArtistsMedium","setTopArtistsMedium","topArtistsLong","setTopArtistsLong","topTracksShort","setTopTracksShort","topTracksMedium","setTopTracksMedium","topTracksLong","setTopTracksLong","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","selectedTimeRange","setSelectedTimeRange","selectedCategory","setSelectedCategory","spotifyApi","clientId","current","setAccessToken","getMyTopArtists","time_range","limit","then","res","body","items","calculateTopGenres","artists","allGenres","flatMap","artist","genres","genreCounts","reduce","counts","genre","Object","entries","sort","a","b","slice","timeRanges","forEach","timeRange","topGenres","console","log","getMyTopTracks","getMyRecentlyPlayedTracks","response","className","children","onCategorySelect","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","track","chooseTrack","uri","path","element","index","_artist$images$","src","images","url","alt","name","href","external_urls","spotify","target","rel","_artist$images$2","_artist$images$3","_track$album","_track$album$images$","album","join","_track$album2","_track$album2$images$","_track$album3","_track$album3$images$","length","count","value","max","Math","_","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [searchResults, setSearchResults] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  \n\n\n\n\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"short_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsShort(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"medium_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsMedium(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"long_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsLong(res.body.items);\n      });\n  }, [accessToken]);\n\n\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n\n    const calculateTopGenres = (artists) => {\n      const allGenres = artists.flatMap((artist) => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange, limit: 50 })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n\n  console.log('API', spotifyApi);\n\n    spotifyApi.current.getMyTopTracks({ limit: 50 }).then((res) => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"short_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksShort(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"medium_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksMedium(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"long_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksLong(res.body.items);\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n      <Header onCategorySelect={setSelectedCategory} />\n      {selectedCategory && selectedCategory !== 'recently-played' && (\n      <section className=\"dashboard__hero\">\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"short_term\")}\n        >\n          Past 4 weeks\n        </button>\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"medium_term\")}\n        >\n          Past 6 months\n        </button>\n        <button\n          className=\"dashboard__btn\"\n          onClick={() => setSelectedTimeRange(\"long_term\")}\n        >\n          All time\n        </button>\n      </section>\n      )}\n      <div className=\"dashboard__songs\"></div>\n      {searchResults.map((track) => (\n        <TrackSearchResult\n          track={track}\n          key={track.uri}\n          chooseTrack={chooseTrack}\n        />\n      ))}\n\n \n      <div className=\"dashboard__top\">\n        <Routes>\n          <Route\n            path=\"/top-artists\"\n            element={\n              <div className=\"dashboard__artists\">\n                {selectedTimeRange === \"short_term\" &&\n                  topArtistsShort.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topArtistsMedium.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topArtistsLong.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-tracks\"\n            element={\n              <div className=\"dashboard__tracks\">\n                {selectedTimeRange === \"short_term\" &&\n                  topTracksShort.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topTracksMedium.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topTracksLong.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-genres\"\n            element={\n              <div className=\"dashboard__genres\">\n  {selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && (\n    <>\n      {topGenresShort.map(([genre, count], index) => (\n        <div key={index} className=\"genre\">\n          <div className=\"genre__container\">\n          <span className=\"genre__rank\">{index + 1}</span>\n          <span className=\"genre__title\">{genre}</span>\n          </div>\n          <progress value={count} max={Math.max(...topGenresShort.map(([_, count]) => count))}></progress>\n        </div>\n      ))}\n    </>\n  )}\n  {selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && (\n    <>\n      {topGenresMedium.map(([genre, count], index) => (\n        <div key={index} className=\"genre\">\n          <span className=\"genre__rank\">{index + 1}</span>\n          <span className=\"genre__title\">{genre}</span>\n          <progress value={count} max={Math.max(...topGenresMedium.map(([_, count]) => count))}></progress>\n        </div>\n      ))}\n    </>\n  )}\n  {selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && (\n    <>\n      {topGenresLong.map(([genre, count], index) => (\n        console.log(\"count\",count),\n        <div key={index} className=\"genre\">\n          <span className=\"genre__rank\">{index + 1}</span>\n          <span className=\"genre__title\">{genre}</span>\n          <progress value={count} max={Math.max(...topGenresLong.map(([_, count]) => count))}></progress>\n        </div>\n      ))}\n    </>\n  )}\n</div>\n            }\n          />\n          <Route\n            path=\"/recently-played\"\n            element={\n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}