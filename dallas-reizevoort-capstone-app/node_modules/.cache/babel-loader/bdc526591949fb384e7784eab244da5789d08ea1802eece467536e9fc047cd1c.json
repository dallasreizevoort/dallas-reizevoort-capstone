{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [topArtists, setTopArtists] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n  console.log(searchResults);\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  const cancel = useRef(false);\n  const debounceTimeoutRef = useRef(null);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"short_term\"\n    }).then(res => {\n      setTopArtistsShort(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"medium_term\"\n    }).then(res => {\n      setTopArtistsMedium(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"long_term\"\n    }).then(res => {\n      setTopArtistsLong(res.body.items);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    cancel.current = false;\n    if (!search) return setSearchResults([]);\n    if (!accessToken || !spotifyApi.current.getAccessToken()) return;\n    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n    debounceTimeoutRef.current = setTimeout(() => {\n      spotifyApi.current.searchTracks(search).then(res => {\n        if (cancel.current) return;\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.album.images[0]);\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url // Removed the trailing period here\n          };\n        }));\n      });\n    }, 300);\n    return () => {\n      if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n      cancel.current = true;\n    };\n  }, [search, accessToken]);\n  const handleSearch = e => {\n    e.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   spotifyApi.current.setAccessToken(accessToken);\n  //   spotifyApi.current.getMyTopArtists().then((res) => {\n  //     setTopArtists(res.body.items);\n\n  //     const allGenres = res.body.items.flatMap((artist) => artist.genres);\n  //     const genreCount = allGenres.reduce((acc, genre) => {\n  //       acc[genre] = (acc[genre] || 0) + 1;\n  //       return acc;\n  //     }, {});\n  //     const topGenres = Object.entries(genreCount)\n  //       .sort((a, b) => b[1] - a[1])\n  //       .slice(0, 5)\n  //       .map(([genre]) => genre);\n  //     setTopGenres(topGenres);\n  //   });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Define a helper function to calculate top genres\n    const calculateTopGenres = artists => {\n      const allGenres = artists.flatMap(artist => artist.genres);\n      const genreCount = allGenres.reduce((acc, genre) => {\n        acc[genre] = (acc[genre] || 0) + 1;\n        return acc;\n      }, {});\n      return Object.entries(genreCount).sort((a, b) => b[1] - a[1]).slice(0, 5).map(([genre]) => genre);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n    spotifyApi.current.getMyTopTracks().then(res => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"short_term\"\n      }).then(res => {\n        setTopTracksShort(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"medium_term\"\n      }).then(res => {\n        setTopTracksMedium(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"long_term\"\n      }).then(res => {\n        setTopTracksLong(res.body.items);\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n      track: track,\n      chooseTrack: chooseTrack\n    }, track.uri, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-artists\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__artists\",\n            children: [selectedTimeRange === \"short_term\" && topArtistsShort.map((artist, index) => {\n              var _artist$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__rank\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_artist$images$ = artist.images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n                  alt: artist.name,\n                  className: \"artist__image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topArtistsMedium.map((artist, index) => {\n              var _artist$images$2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__rank\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_artist$images$2 = artist.images[0]) === null || _artist$images$2 === void 0 ? void 0 : _artist$images$2.url,\n                  alt: artist.name,\n                  className: \"artist__image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topArtistsLong.map((artist, index) => {\n              var _artist$images$3;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"artist\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__rank\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_artist$images$3 = artist.images[0]) === null || _artist$images$3 === void 0 ? void 0 : _artist$images$3.url,\n                  alt: artist.name,\n                  className: \"artist__image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"artist__title\",\n                  children: artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-tracks\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__tracks\",\n            children: [selectedTimeRange === \"short_term\" && topTracksShort.map((track, index) => {\n              var _track$album, _track$album$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"track__rank\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n                  alt: track.name,\n                  className: \"track__image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"track__title\",\n                  children: track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topTracksMedium.map((track, index) => {\n              var _track$album2, _track$album2$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"track__rank\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images$ = _track$album2.images[0]) === null || _track$album2$images$ === void 0 ? void 0 : _track$album2$images$.url,\n                  alt: track.name,\n                  className: \"track__image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"track__title\",\n                  children: track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topTracksLong.map((track, index) => {\n              var _track$album3, _track$album3$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"track__rank\",\n                  children: [index + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_track$album3 = track.album) === null || _track$album3 === void 0 ? void 0 : (_track$album3$images$ = _track$album3.images[0]) === null || _track$album3$images$ === void 0 ? void 0 : _track$album3$images$.url,\n                  alt: track.name,\n                  className: \"track__image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"track__title\",\n                  children: track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-genres\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__genres\",\n            children: [selectedTimeRange === \"short_term\" && topGenresShort.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: [index + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 21\n            }, this)), selectedTimeRange === \"medium_term\" && topGenresMedium.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: [index + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this)), selectedTimeRange === \"long_term\" && topGenresLong.map((genre, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"genre\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__rank\",\n                children: [index + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"genre__title\",\n                children: genre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recently-played\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__recents\",\n            children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__rank\",\n                children: [index + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.track.album.images[0].url,\n                alt: track.track.name,\n                className: \"track__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__title\",\n                children: track.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"hGZJuYwH8WoSWWQyJwZ0kAmH1C0=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","TrackSearchResult","Player","Header","Routes","Route","jsxDEV","_jsxDEV","Dashboard","code","_s","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","topArtists","setTopArtists","topTracks","setTopTracks","topGenres","setTopGenres","recentlyPlayed","setRecentlyPlayed","recentlyPlayedTracks","setRecentlyPlayedTracks","topArtistsShort","setTopArtistsShort","topArtistsMedium","setTopArtistsMedium","topArtistsLong","setTopArtistsLong","topTracksShort","setTopTracksShort","topTracksMedium","setTopTracksMedium","topTracksLong","setTopTracksLong","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","selectedTimeRange","setSelectedTimeRange","chooseTrack","track","console","log","spotifyApi","clientId","cancel","debounceTimeoutRef","current","setAccessToken","getMyTopArtists","time_range","then","res","body","items","getAccessToken","clearTimeout","setTimeout","searchTracks","tracks","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","handleSearch","e","preventDefault","calculateTopGenres","allGenres","flatMap","genres","genreCount","acc","genre","Object","entries","sort","a","b","slice","timeRanges","forEach","timeRange","getMyTopTracks","getMyRecentlyPlayedTracks","limit","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","path","element","index","_artist$images$","src","alt","_artist$images$2","_artist$images$3","_track$album","_track$album$images$","_track$album2","_track$album2$images$","_track$album3","_track$album3$images$","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"../TrackSearchResult\";\nimport Player from \"../Player\";\nimport Header from \"../Header/Header\";\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [topArtists, setTopArtists] = useState([]);\n  const [topTracks, setTopTracks] = useState([]);\n  const [topGenres, setTopGenres] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n\n  console.log(searchResults);\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n  const cancel = useRef(false);\n  const debounceTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"short_term\" })\n      .then((res) => {\n        setTopArtistsShort(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"medium_term\" })\n      .then((res) => {\n        setTopArtistsMedium(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"long_term\" })\n      .then((res) => {\n        setTopArtistsLong(res.body.items);\n      });\n  }, [accessToken]);\n\n  useEffect(() => {\n    cancel.current = false;\n    if (!search) return setSearchResults([]);\n    if (!accessToken || !spotifyApi.current.getAccessToken()) return;\n    if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n    debounceTimeoutRef.current = setTimeout(() => {\n      spotifyApi.current.searchTracks(search).then((res) => {\n        if (cancel.current) return;\n        setSearchResults(\n          res.body.tracks.items.map((track) => {\n            const smallestAlbumImage = track.album.images.reduce(\n              (smallest, image) => {\n                if (image.height < smallest.height) return image;\n                return smallest;\n              },\n              track.album.images[0]\n            );\n            return {\n              artist: track.artists[0].name,\n              title: track.name,\n              uri: track.uri,\n              albumUrl: smallestAlbumImage.url, // Removed the trailing period here\n            };\n          })\n        );\n      });\n    }, 300);\n    return () => {\n      if (debounceTimeoutRef.current) clearTimeout(debounceTimeoutRef.current);\n      cancel.current = true;\n    };\n  }, [search, accessToken]);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n  };\n\n  // useEffect(() => {\n  //   if (!accessToken) return;\n  //   spotifyApi.current.setAccessToken(accessToken);\n  //   spotifyApi.current.getMyTopArtists().then((res) => {\n  //     setTopArtists(res.body.items);\n\n  //     const allGenres = res.body.items.flatMap((artist) => artist.genres);\n  //     const genreCount = allGenres.reduce((acc, genre) => {\n  //       acc[genre] = (acc[genre] || 0) + 1;\n  //       return acc;\n  //     }, {});\n  //     const topGenres = Object.entries(genreCount)\n  //       .sort((a, b) => b[1] - a[1])\n  //       .slice(0, 5)\n  //       .map(([genre]) => genre);\n  //     setTopGenres(topGenres);\n  //   });\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Define a helper function to calculate top genres\n    const calculateTopGenres = (artists) => {\n      const allGenres = artists.flatMap((artist) => artist.genres);\n      const genreCount = allGenres.reduce((acc, genre) => {\n        acc[genre] = (acc[genre] || 0) + 1;\n        return acc;\n      }, {});\n      return Object.entries(genreCount)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 5)\n        .map(([genre]) => genre);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n\n    spotifyApi.current.getMyTopTracks().then((res) => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"short_term\" })\n        .then((res) => {\n          setTopTracksShort(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"medium_term\" })\n        .then((res) => {\n          setTopTracksMedium(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"long_term\" })\n        .then((res) => {\n          setTopTracksLong(res.body.items);\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n      <Header />\n      <section className=\"dashboard__hero\">\n        <button onClick={() => setSelectedTimeRange(\"short_term\")}>\n          Past 4 weeks\n        </button>\n        <button onClick={() => setSelectedTimeRange(\"medium_term\")}>\n          Past 6 months\n        </button>\n        <button onClick={() => setSelectedTimeRange(\"long_term\")}>\n          All time\n        </button>\n\n        {/* <form className=\"dashboard__form\" onSubmit={handleSearch}> */}\n        {/* <input\n            className=\"dashboard__input\"\n            type=\"text\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            placeholder=\"Search...\"\n          /> */}\n        {/* <button className=\"dashboard__button\" type=\"submit\">\n            Search\n          </button> */}\n        {/* </form> */}\n      </section>\n      <div className=\"dashboard__songs\"></div>\n      {searchResults.map((track) => (\n        <TrackSearchResult\n          track={track}\n          key={track.uri}\n          chooseTrack={chooseTrack}\n        />\n      ))}\n\n      {/* <Player accessToken={accessToken} trackUri={playingTrack?.uri} /> */}\n      <div className=\"dashboard__top\">\n        <Routes>\n          <Route\n            path=\"/top-artists\"\n            element={\n              <div className=\"dashboard__artists\">\n                {selectedTimeRange === \"short_term\" &&\n                  topArtistsShort.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <span className=\"artist__rank\">{index + 1}.</span>\n                      <img\n                        src={artist.images[0]?.url}\n                        alt={artist.name}\n                        className=\"artist__image\"\n                      />\n                      <span className=\"artist__title\">{artist.name}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topArtistsMedium.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <span className=\"artist__rank\">{index + 1}.</span>\n                      <img\n                        src={artist.images[0]?.url}\n                        alt={artist.name}\n                        className=\"artist__image\"\n                      />\n                      <span className=\"artist__title\">{artist.name}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topArtistsLong.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <span className=\"artist__rank\">{index + 1}.</span>\n                      <img\n                        src={artist.images[0]?.url}\n                        alt={artist.name}\n                        className=\"artist__image\"\n                      />\n                      <span className=\"artist__title\">{artist.name}</span>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-tracks\"\n            element={\n              <div className=\"dashboard__tracks\">\n                {selectedTimeRange === \"short_term\" &&\n                  topTracksShort.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <span className=\"track__rank\">{index + 1}.</span>\n                      <img\n                        src={track.album?.images[0]?.url}\n                        alt={track.name}\n                        className=\"track__image\"\n                      />\n                      <span className=\"track__title\">{track.name}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topTracksMedium.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <span className=\"track__rank\">{index + 1}.</span>\n                      <img\n                        src={track.album?.images[0]?.url}\n                        alt={track.name}\n                        className=\"track__image\"\n                      />\n                      <span className=\"track__title\">{track.name}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topTracksLong.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <span className=\"track__rank\">{index + 1}.</span>\n                      <img\n                        src={track.album?.images[0]?.url}\n                        alt={track.name}\n                        className=\"track__image\"\n                      />\n                      <span className=\"track__title\">{track.name}</span>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-genres\"\n            element={\n              <div className=\"dashboard__genres\">\n                {selectedTimeRange === \"short_term\" &&\n                  topGenresShort.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}.</span>\n                      <span className=\"genre__title\">{genre}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topGenresMedium.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}.</span>\n                      <span className=\"genre__title\">{genre}</span>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topGenresLong.map((genre, index) => (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}.</span>\n                      <span className=\"genre__title\">{genre}</span>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/recently-played\"\n            element={\n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}.</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,kBAAkB;AACzB,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,iBAAiB,MAAM,sBAAsB;AACpD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,SAASA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAMC,WAAW,GAAGf,OAAO,CAACa,IAAI,CAAC;EACjC,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC;EAClD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACqC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACyC,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC2C,cAAc,EAAEC,iBAAiB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6C,eAAe,EAAEC,kBAAkB,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlD,QAAQ,CAAC,YAAY,CAAC;EAExE,SAASmD,WAAWA,CAACC,KAAK,EAAE;IAC1BhC,eAAe,CAACgC,KAAK,CAAC;IACtBpC,SAAS,CAAC,EAAE,CAAC;EACf;EAEAqC,OAAO,CAACC,GAAG,CAACrC,aAAa,CAAC;EAE1B,MAAMsC,UAAU,GAAGrD,MAAM,CACvB,IAAIC,aAAa,CAAC;IAChBqD,QAAQ,EAAE;EACZ,CAAC,CACH,CAAC;EACD,MAAMC,MAAM,GAAGvD,MAAM,CAAC,KAAK,CAAC;EAC5B,MAAMwD,kBAAkB,GAAGxD,MAAM,CAAC,IAAI,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,WAAW,EAAE;IAClByC,UAAU,CAACI,OAAO,CAACC,cAAc,CAAC9C,WAAW,CAAC;IAE9CyC,UAAU,CAACI,OAAO,CACfE,eAAe,CAAC;MAAEC,UAAU,EAAE;IAAa,CAAC,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAK;MACbhC,kBAAkB,CAACgC,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;IACpC,CAAC,CAAC;IACJX,UAAU,CAACI,OAAO,CACfE,eAAe,CAAC;MAAEC,UAAU,EAAE;IAAc,CAAC,CAAC,CAC9CC,IAAI,CAAEC,GAAG,IAAK;MACb9B,mBAAmB,CAAC8B,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;IACrC,CAAC,CAAC;IACJX,UAAU,CAACI,OAAO,CACfE,eAAe,CAAC;MAAEC,UAAU,EAAE;IAAY,CAAC,CAAC,CAC5CC,IAAI,CAAEC,GAAG,IAAK;MACb5B,iBAAiB,CAAC4B,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;IACnC,CAAC,CAAC;EACN,CAAC,EAAE,CAACpD,WAAW,CAAC,CAAC;EAEjBb,SAAS,CAAC,MAAM;IACdwD,MAAM,CAACE,OAAO,GAAG,KAAK;IACtB,IAAI,CAAC5C,MAAM,EAAE,OAAOG,gBAAgB,CAAC,EAAE,CAAC;IACxC,IAAI,CAACJ,WAAW,IAAI,CAACyC,UAAU,CAACI,OAAO,CAACQ,cAAc,CAAC,CAAC,EAAE;IAC1D,IAAIT,kBAAkB,CAACC,OAAO,EAAES,YAAY,CAACV,kBAAkB,CAACC,OAAO,CAAC;IACxED,kBAAkB,CAACC,OAAO,GAAGU,UAAU,CAAC,MAAM;MAC5Cd,UAAU,CAACI,OAAO,CAACW,YAAY,CAACvD,MAAM,CAAC,CAACgD,IAAI,CAAEC,GAAG,IAAK;QACpD,IAAIP,MAAM,CAACE,OAAO,EAAE;QACpBzC,gBAAgB,CACd8C,GAAG,CAACC,IAAI,CAACM,MAAM,CAACL,KAAK,CAACM,GAAG,CAAEpB,KAAK,IAAK;UACnC,MAAMqB,kBAAkB,GAAGrB,KAAK,CAACsB,KAAK,CAACC,MAAM,CAACC,MAAM,CAClD,CAACC,QAAQ,EAAEC,KAAK,KAAK;YACnB,IAAIA,KAAK,CAACC,MAAM,GAAGF,QAAQ,CAACE,MAAM,EAAE,OAAOD,KAAK;YAChD,OAAOD,QAAQ;UACjB,CAAC,EACDzB,KAAK,CAACsB,KAAK,CAACC,MAAM,CAAC,CAAC,CACtB,CAAC;UACD,OAAO;YACLK,MAAM,EAAE5B,KAAK,CAAC6B,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;YAC7BC,KAAK,EAAE/B,KAAK,CAAC8B,IAAI;YACjBE,GAAG,EAAEhC,KAAK,CAACgC,GAAG;YACdC,QAAQ,EAAEZ,kBAAkB,CAACa,GAAG,CAAE;UACpC,CAAC;QACH,CAAC,CACH,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAM;MACX,IAAI5B,kBAAkB,CAACC,OAAO,EAAES,YAAY,CAACV,kBAAkB,CAACC,OAAO,CAAC;MACxEF,MAAM,CAACE,OAAO,GAAG,IAAI;IACvB,CAAC;EACH,CAAC,EAAE,CAAC5C,MAAM,EAAED,WAAW,CAAC,CAAC;EAEzB,MAAMyE,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;EACpB,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAxF,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,WAAW,EAAE;IAClByC,UAAU,CAACI,OAAO,CAACC,cAAc,CAAC9C,WAAW,CAAC;;IAE9C;IACA,MAAM4E,kBAAkB,GAAIT,OAAO,IAAK;MACtC,MAAMU,SAAS,GAAGV,OAAO,CAACW,OAAO,CAAEZ,MAAM,IAAKA,MAAM,CAACa,MAAM,CAAC;MAC5D,MAAMC,UAAU,GAAGH,SAAS,CAACf,MAAM,CAAC,CAACmB,GAAG,EAAEC,KAAK,KAAK;QAClDD,GAAG,CAACC,KAAK,CAAC,GAAG,CAACD,GAAG,CAACC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;QAClC,OAAOD,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,OAAOE,MAAM,CAACC,OAAO,CAACJ,UAAU,CAAC,CAC9BK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC,CAC3BE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACX9B,GAAG,CAAC,CAAC,CAACwB,KAAK,CAAC,KAAKA,KAAK,CAAC;IAC5B,CAAC;;IAED;IACA,MAAMO,UAAU,GAAG,CAAC,YAAY,EAAE,aAAa,EAAE,WAAW,CAAC;IAC7DA,UAAU,CAACC,OAAO,CAAEC,SAAS,IAAK;MAChClD,UAAU,CAACI,OAAO,CACfE,eAAe,CAAC;QAAEC,UAAU,EAAE2C;MAAU,CAAC,CAAC,CAC1C1C,IAAI,CAAEC,GAAG,IAAK;QACb,MAAMvC,SAAS,GAAGiE,kBAAkB,CAAC1B,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;QACpD,IAAIuC,SAAS,KAAK,YAAY,EAAE;UAC9B7D,iBAAiB,CAACnB,SAAS,CAAC;QAC9B,CAAC,MAAM,IAAIgF,SAAS,KAAK,aAAa,EAAE;UACtC3D,kBAAkB,CAACrB,SAAS,CAAC;QAC/B,CAAC,MAAM,IAAIgF,SAAS,KAAK,WAAW,EAAE;UACpCzD,gBAAgB,CAACvB,SAAS,CAAC;QAC7B;MACF,CAAC,CAAC;IACN,CAAC,CAAC;IAEF8B,UAAU,CAACI,OAAO,CAAC+C,cAAc,CAAC,CAAC,CAAC3C,IAAI,CAAEC,GAAG,IAAK;MAChDxC,YAAY,CAACwC,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MAC5Bb,OAAO,CAACC,GAAG,CAACU,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MAE3BX,UAAU,CAACI,OAAO,CACf+C,cAAc,CAAC;QAAE5C,UAAU,EAAE;MAAa,CAAC,CAAC,CAC5CC,IAAI,CAAEC,GAAG,IAAK;QACb1B,iBAAiB,CAAC0B,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MACnC,CAAC,CAAC;MACJX,UAAU,CAACI,OAAO,CACf+C,cAAc,CAAC;QAAE5C,UAAU,EAAE;MAAc,CAAC,CAAC,CAC7CC,IAAI,CAAEC,GAAG,IAAK;QACbxB,kBAAkB,CAACwB,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MACpC,CAAC,CAAC;MACJX,UAAU,CAACI,OAAO,CACf+C,cAAc,CAAC;QAAE5C,UAAU,EAAE;MAAY,CAAC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,IAAK;QACbtB,gBAAgB,CAACsB,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;MAClC,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,EAAE,CAACpD,WAAW,CAAC,CAAC;EAEjBb,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,WAAW,EAAE;IAClByC,UAAU,CAACI,OAAO,CAACC,cAAc,CAAC9C,WAAW,CAAC;IAC9CyC,UAAU,CAACI,OAAO,CACfgD,yBAAyB,CAAC;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC,CACxC7C,IAAI,CAAE8C,QAAQ,IAAK;MAClBjF,iBAAiB,CAACiF,QAAQ,CAAC5C,IAAI,CAACC,KAAK,CAAC;IACxC,CAAC,CAAC;EACN,CAAC,EAAE,CAACpD,WAAW,CAAC,CAAC;EAEjB,oBACEJ,OAAA;IAAKoG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrG,OAAA,CAACJ,MAAM;MAAA0G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzG,OAAA;MAASoG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAClCrG,OAAA;QAAQ0G,OAAO,EAAEA,CAAA,KAAMlE,oBAAoB,CAAC,YAAY,CAAE;QAAA6D,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzG,OAAA;QAAQ0G,OAAO,EAAEA,CAAA,KAAMlE,oBAAoB,CAAC,aAAa,CAAE;QAAA6D,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzG,OAAA;QAAQ0G,OAAO,EAAEA,CAAA,KAAMlE,oBAAoB,CAAC,WAAW,CAAE;QAAA6D,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcF,CAAC,eACVzG,OAAA;MAAKoG,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACvClG,aAAa,CAACuD,GAAG,CAAEpB,KAAK,iBACvB1C,OAAA,CAACN,iBAAiB;MAChBgD,KAAK,EAAEA,KAAM;MAEbD,WAAW,EAAEA;IAAY,GADpBC,KAAK,CAACgC,GAAG;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACF,CAAC,eAGFzG,OAAA;MAAKoG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BrG,OAAA,CAACH,MAAM;QAAAwG,QAAA,gBACLrG,OAAA,CAACF,KAAK;UACJ6G,IAAI,EAAC,cAAc;UACnBC,OAAO,eACL5G,OAAA;YAAKoG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GAChC9D,iBAAiB,KAAK,YAAY,IACjClB,eAAe,CAACyC,GAAG,CAAC,CAACQ,MAAM,EAAEuC,KAAK;cAAA,IAAAC,eAAA;cAAA,oBAChC9G,OAAA;gBAAiBoG,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACjCrG,OAAA;kBAAMoG,SAAS,EAAC,cAAc;kBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAClDzG,OAAA;kBACE+G,GAAG,GAAAD,eAAA,GAAExC,MAAM,CAACL,MAAM,CAAC,CAAC,CAAC,cAAA6C,eAAA,uBAAhBA,eAAA,CAAkBlC,GAAI;kBAC3BoC,GAAG,EAAE1C,MAAM,CAACE,IAAK;kBACjB4B,SAAS,EAAC;gBAAe;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC,eACFzG,OAAA;kBAAMoG,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAE/B,MAAM,CAACE;gBAAI;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAP5CI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CAAC;YAAA,CACP,CAAC,EACHlE,iBAAiB,KAAK,aAAa,IAClChB,gBAAgB,CAACuC,GAAG,CAAC,CAACQ,MAAM,EAAEuC,KAAK;cAAA,IAAAI,gBAAA;cAAA,oBACjCjH,OAAA;gBAAiBoG,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACjCrG,OAAA;kBAAMoG,SAAS,EAAC,cAAc;kBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAClDzG,OAAA;kBACE+G,GAAG,GAAAE,gBAAA,GAAE3C,MAAM,CAACL,MAAM,CAAC,CAAC,CAAC,cAAAgD,gBAAA,uBAAhBA,gBAAA,CAAkBrC,GAAI;kBAC3BoC,GAAG,EAAE1C,MAAM,CAACE,IAAK;kBACjB4B,SAAS,EAAC;gBAAe;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC,eACFzG,OAAA;kBAAMoG,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAE/B,MAAM,CAACE;gBAAI;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAP5CI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CAAC;YAAA,CACP,CAAC,EACHlE,iBAAiB,KAAK,WAAW,IAChCd,cAAc,CAACqC,GAAG,CAAC,CAACQ,MAAM,EAAEuC,KAAK;cAAA,IAAAK,gBAAA;cAAA,oBAC/BlH,OAAA;gBAAiBoG,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACjCrG,OAAA;kBAAMoG,SAAS,EAAC,cAAc;kBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAClDzG,OAAA;kBACE+G,GAAG,GAAAG,gBAAA,GAAE5C,MAAM,CAACL,MAAM,CAAC,CAAC,CAAC,cAAAiD,gBAAA,uBAAhBA,gBAAA,CAAkBtC,GAAI;kBAC3BoC,GAAG,EAAE1C,MAAM,CAACE,IAAK;kBACjB4B,SAAS,EAAC;gBAAe;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC,eACFzG,OAAA;kBAAMoG,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAE/B,MAAM,CAACE;gBAAI;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAP5CI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CAAC;YAAA,CACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFzG,OAAA,CAACF,KAAK;UACJ6G,IAAI,EAAC,aAAa;UAClBC,OAAO,eACL5G,OAAA;YAAKoG,SAAS,EAAC,mBAAmB;YAAAC,QAAA,GAC/B9D,iBAAiB,KAAK,YAAY,IACjCZ,cAAc,CAACmC,GAAG,CAAC,CAACpB,KAAK,EAAEmE,KAAK;cAAA,IAAAM,YAAA,EAAAC,oBAAA;cAAA,oBAC9BpH,OAAA;gBAAiBoG,SAAS,EAAC,OAAO;gBAAAC,QAAA,gBAChCrG,OAAA;kBAAMoG,SAAS,EAAC,aAAa;kBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACjDzG,OAAA;kBACE+G,GAAG,GAAAI,YAAA,GAAEzE,KAAK,CAACsB,KAAK,cAAAmD,YAAA,wBAAAC,oBAAA,GAAXD,YAAA,CAAalD,MAAM,CAAC,CAAC,CAAC,cAAAmD,oBAAA,uBAAtBA,oBAAA,CAAwBxC,GAAI;kBACjCoC,GAAG,EAAEtE,KAAK,CAAC8B,IAAK;kBAChB4B,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,eACFzG,OAAA;kBAAMoG,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAE3D,KAAK,CAAC8B;gBAAI;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAP1CI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CAAC;YAAA,CACP,CAAC,EACHlE,iBAAiB,KAAK,aAAa,IAClCV,eAAe,CAACiC,GAAG,CAAC,CAACpB,KAAK,EAAEmE,KAAK;cAAA,IAAAQ,aAAA,EAAAC,qBAAA;cAAA,oBAC/BtH,OAAA;gBAAiBoG,SAAS,EAAC,OAAO;gBAAAC,QAAA,gBAChCrG,OAAA;kBAAMoG,SAAS,EAAC,aAAa;kBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACjDzG,OAAA;kBACE+G,GAAG,GAAAM,aAAA,GAAE3E,KAAK,CAACsB,KAAK,cAAAqD,aAAA,wBAAAC,qBAAA,GAAXD,aAAA,CAAapD,MAAM,CAAC,CAAC,CAAC,cAAAqD,qBAAA,uBAAtBA,qBAAA,CAAwB1C,GAAI;kBACjCoC,GAAG,EAAEtE,KAAK,CAAC8B,IAAK;kBAChB4B,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,eACFzG,OAAA;kBAAMoG,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAE3D,KAAK,CAAC8B;gBAAI;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAP1CI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CAAC;YAAA,CACP,CAAC,EACHlE,iBAAiB,KAAK,WAAW,IAChCR,aAAa,CAAC+B,GAAG,CAAC,CAACpB,KAAK,EAAEmE,KAAK;cAAA,IAAAU,aAAA,EAAAC,qBAAA;cAAA,oBAC7BxH,OAAA;gBAAiBoG,SAAS,EAAC,OAAO;gBAAAC,QAAA,gBAChCrG,OAAA;kBAAMoG,SAAS,EAAC,aAAa;kBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACjDzG,OAAA;kBACE+G,GAAG,GAAAQ,aAAA,GAAE7E,KAAK,CAACsB,KAAK,cAAAuD,aAAA,wBAAAC,qBAAA,GAAXD,aAAA,CAAatD,MAAM,CAAC,CAAC,CAAC,cAAAuD,qBAAA,uBAAtBA,qBAAA,CAAwB5C,GAAI;kBACjCoC,GAAG,EAAEtE,KAAK,CAAC8B,IAAK;kBAChB4B,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,eACFzG,OAAA;kBAAMoG,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAE3D,KAAK,CAAC8B;gBAAI;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAP1CI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CAAC;YAAA,CACP,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFzG,OAAA,CAACF,KAAK;UACJ6G,IAAI,EAAC,aAAa;UAClBC,OAAO,eACL5G,OAAA;YAAKoG,SAAS,EAAC,mBAAmB;YAAAC,QAAA,GAC/B9D,iBAAiB,KAAK,YAAY,IACjCN,cAAc,CAAC6B,GAAG,CAAC,CAACwB,KAAK,EAAEuB,KAAK,kBAC9B7G,OAAA;cAAiBoG,SAAS,EAAC,OAAO;cAAAC,QAAA,gBAChCrG,OAAA;gBAAMoG,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjDzG,OAAA;gBAAMoG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEf;cAAK;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAFrCI,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGV,CACN,CAAC,EACHlE,iBAAiB,KAAK,aAAa,IAClCJ,eAAe,CAAC2B,GAAG,CAAC,CAACwB,KAAK,EAAEuB,KAAK,kBAC/B7G,OAAA;cAAiBoG,SAAS,EAAC,OAAO;cAAAC,QAAA,gBAChCrG,OAAA;gBAAMoG,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjDzG,OAAA;gBAAMoG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEf;cAAK;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAFrCI,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGV,CACN,CAAC,EACHlE,iBAAiB,KAAK,WAAW,IAChCF,aAAa,CAACyB,GAAG,CAAC,CAACwB,KAAK,EAAEuB,KAAK,kBAC7B7G,OAAA;cAAiBoG,SAAS,EAAC,OAAO;cAAAC,QAAA,gBAChCrG,OAAA;gBAAMoG,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjDzG,OAAA;gBAAMoG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEf;cAAK;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAFrCI,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGV,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFzG,OAAA,CAACF,KAAK;UACJ6G,IAAI,EAAC,kBAAkB;UACvBC,OAAO,eACL5G,OAAA;YAAKoG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAChCpF,cAAc,CAAC6C,GAAG,CAAC,CAACpB,KAAK,EAAEmE,KAAK,kBAC/B7G,OAAA;cAAiBoG,SAAS,EAAC,QAAQ;cAAAC,QAAA,gBACjCrG,OAAA;gBAAMoG,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAEQ,KAAK,GAAG,CAAC,EAAC,GAAC;cAAA;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjDzG,OAAA;gBACE+G,GAAG,EAAErE,KAAK,CAACA,KAAK,CAACsB,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACW,GAAI;gBACrCoC,GAAG,EAAEtE,KAAK,CAACA,KAAK,CAAC8B,IAAK;gBACtB4B,SAAS,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC,eACFzG,OAAA;gBAAMoG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAE3D,KAAK,CAACA,KAAK,CAAC8B;cAAI;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GAPhDI,KAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtG,EAAA,CAjWQF,SAAS;EAAA,QACIZ,OAAO;AAAA;AAAAoI,EAAA,GADpBxH,SAAS;AAmWlB,eAAeA,SAAS;AAAC,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}