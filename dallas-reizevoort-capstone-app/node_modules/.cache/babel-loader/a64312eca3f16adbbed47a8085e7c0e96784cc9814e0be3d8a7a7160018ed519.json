{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Genres/Genres.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport \"./Genres.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Genres({\n  accessToken,\n  selectedTimeRange\n}) {\n  _s();\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  const calculateTopGenres = artists => {\n    const allGenres = artists.flatMap(artist => artist.genres);\n    const genreCounts = allGenres.reduce((counts, genre) => {\n      counts[genre] = (counts[genre] || 0) + 1;\n      return counts;\n    }, {});\n    return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n  };\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n  }, [accessToken]);\n  const renderGenres = genres => {\n    return genres.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"genre__rank\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"genre__title\",\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: count,\n        max: Math.max(...genres.map(([_, count]) => count))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard__genres\",\n    children: [selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && renderGenres(topGenresShort), selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && renderGenres(topGenresMedium), selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && renderGenres(topGenresLong)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Genres, \"YxCgqr+CqD5RUrsbIKnqOLT7KwM=\");\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useEffect","useRef","useState","spotifyWebApi","jsxDEV","_jsxDEV","Genres","accessToken","selectedTimeRange","_s","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","spotifyApi","clientId","calculateTopGenres","artists","allGenres","flatMap","artist","genres","genreCounts","reduce","counts","genre","Object","entries","sort","a","b","slice","current","setAccessToken","timeRanges","forEach","timeRange","getMyTopArtists","time_range","limit","then","res","topGenres","body","items","renderGenres","map","count","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","max","Math","_","length","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Genres/Genres.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport \"./Genres.scss\";\n\nfunction Genres({ accessToken, selectedTimeRange }) {\n    const [topGenresShort, setTopGenresShort] = useState([]);\n    const [topGenresMedium, setTopGenresMedium] = useState([]);\n    const [topGenresLong, setTopGenresLong] = useState([]);\n\n    const spotifyApi = useRef(\n        new spotifyWebApi({\n            clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n        })\n    );\n\n    const calculateTopGenres = (artists) => {\n        const allGenres = artists.flatMap((artist) => artist.genres);\n        const genreCounts = allGenres.reduce((counts, genre) => {\n            counts[genre] = (counts[genre] || 0) + 1;\n            return counts;\n        }, {});\n        return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n    };\n\n    useEffect(() => {\n        if (!accessToken) return;\n        spotifyApi.current.setAccessToken(accessToken);\n\n        const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n        timeRanges.forEach((timeRange) => {\n            spotifyApi.current\n                .getMyTopArtists({ time_range: timeRange, limit: 50 })\n                .then((res) => {\n                    const topGenres = calculateTopGenres(res.body.items);\n                    if (timeRange === \"short_term\") {\n                        setTopGenresShort(topGenres);\n                    } else if (timeRange === \"medium_term\") {\n                        setTopGenresMedium(topGenres);\n                    } else if (timeRange === \"long_term\") {\n                        setTopGenresLong(topGenres);\n                    }\n                });\n        });\n    }, [accessToken]);\n\n    const renderGenres = (genres) => {\n        return genres.map(([genre, count], index) => (\n            <div key={index} className=\"genre\">\n                <div className=\"genre__container\">\n                    <span className=\"genre__rank\">{index + 1}</span>\n                    <span className=\"genre__title\">{genre}</span>\n                </div>\n                <progress value={count} max={Math.max(...genres.map(([_, count]) => count))}></progress>\n            </div>\n        ));\n    };\n\n    return (\n        <div className=\"dashboard__genres\">\n            {selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && renderGenres(topGenresShort)}\n            {selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && renderGenres(topGenresMedium)}\n            {selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && renderGenres(topGenresLong)}\n        </div>\n    );\n}\n\nexport default Genres;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}