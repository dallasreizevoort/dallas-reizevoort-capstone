{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport Header from \"../Header/Header\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport Tracks from \"../Tracks/Tracks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [topTracks, setTopTracks] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"short_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsShort(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"medium_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsMedium(res.body.items);\n    });\n    spotifyApi.current.getMyTopArtists({\n      time_range: \"long_term\",\n      limit: 50\n    }).then(res => {\n      setTopArtistsLong(res.body.items);\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    const calculateTopGenres = artists => {\n      const allGenres = artists.flatMap(artist => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n    spotifyApi.current.getMyTopTracks({\n      limit: 50\n    }).then(res => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"short_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksShort(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"medium_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksMedium(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksLong(res.body.items);\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onCategorySelect: setSelectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), selectedCategory && selectedCategory !== \"recently-played\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard__artists\",\n        children: [selectedTimeRange === \"short_term\" && topArtistsShort.map((artist, index) => {\n          var _artist$images$;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artist\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"artist__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_artist$images$ = artist.images[0]) === null || _artist$images$ === void 0 ? void 0 : _artist$images$.url,\n                alt: artist.name,\n                className: \"artist__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"artist__title\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist__link\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: artist.external_urls.spotify,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"artist__btn\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: SpotifyIcon,\n                  alt: \"Spotify Icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this);\n        }), selectedTimeRange === \"medium_term\" && topArtistsMedium.map((artist, index) => {\n          var _artist$images$2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artist\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"artist__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_artist$images$2 = artist.images[0]) === null || _artist$images$2 === void 0 ? void 0 : _artist$images$2.url,\n                alt: artist.name,\n                className: \"artist__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"artist__title\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist__link\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: artist.external_urls.spotify,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"artist__btn\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: SpotifyIcon,\n                  alt: \"Spotify Icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this);\n        }), selectedTimeRange === \"long_term\" && topArtistsLong.map((artist, index) => {\n          var _artist$images$3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artist\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist__container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"artist__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_artist$images$3 = artist.images[0]) === null || _artist$images$3 === void 0 ? void 0 : _artist$images$3.url,\n                alt: artist.name,\n                className: \"artist__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"artist__title\",\n              children: artist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"artist__link\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: artist.external_urls.spotify,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"artist__btn\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: SpotifyIcon,\n                  alt: \"Spotify Icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Tracks, {\n        selectedTimeRange: selectedTimeRange,\n        setSelectedTimeRange: setSelectedTimeRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }, this), selectedTimeRange === \"short_term\" && topTracksShort.map((track, index) => {\n        var _track$album, _track$album$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__rank\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n              alt: track.name,\n              className: \"track__image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__title\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__artist\",\n              children: track.artists.map(artist => artist.name).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__link\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: track.external_urls.spotify,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: SpotifyIcon,\n                alt: \"Spotify Icon\",\n                className: \"track__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 23\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this);\n      }), selectedTimeRange === \"medium_term\" && topTracksMedium.map((track, index) => {\n        var _track$album2, _track$album2$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__rank\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images$ = _track$album2.images[0]) === null || _track$album2$images$ === void 0 ? void 0 : _track$album2$images$.url,\n              alt: track.name,\n              className: \"track__image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__title\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__artist\",\n              children: track.artists.map(artist => artist.name).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__link\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: track.external_urls.spotify,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: SpotifyIcon,\n                alt: \"Spotify Icon\",\n                className: \"track__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 23\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this);\n      }), selectedTimeRange === \"long_term\" && topTracksLong.map((track, index) => {\n        var _track$album3, _track$album3$images$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__rank\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_track$album3 = track.album) === null || _track$album3 === void 0 ? void 0 : (_track$album3$images$ = _track$album3.images[0]) === null || _track$album3$images$ === void 0 ? void 0 : _track$album3$images$.url,\n              alt: track.name,\n              className: \"track__image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__title\",\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__container\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"track__artist\",\n              children: track.artists.map(artist => artist.name).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__link\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: track.external_urls.spotify,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: SpotifyIcon,\n                alt: \"Spotify Icon\",\n                className: \"track__icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 23\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__genres\",\n      children: [selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: topGenresShort.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"genre__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"genre__rank\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"genre__title\",\n              children: genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n            value: count,\n            max: Math.max(...topGenresShort.map(([_, count]) => count))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 27\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this))\n      }, void 0, false), selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: topGenresMedium.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"genre__rank\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"genre__title\",\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n            value: count,\n            max: Math.max(...topGenresMedium.map(([_, count]) => count))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 27\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this))\n      }, void 0, false), selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: topGenresLong.map(([genre, count], index) => (console.log(\"count\", count), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"genre__rank\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"genre__title\",\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n            value: count,\n            max: Math.max(...topGenresLong.map(([_, count]) => count))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 31\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 29\n        }, this)))\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__recents\",\n      children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"track__rank\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.track.album.images[0].url,\n          alt: track.track.name,\n          className: \"track__image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"track__title\",\n          children: track.track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"zv3QBHWLmGZ0wgn/1PqM6TIuUDs=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","Header","SpotifyIcon","Tracks","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","code","_s","accessToken","topTracks","setTopTracks","recentlyPlayed","setRecentlyPlayed","topArtistsShort","setTopArtistsShort","topArtistsMedium","setTopArtistsMedium","topArtistsLong","setTopArtistsLong","topTracksShort","setTopTracksShort","topTracksMedium","setTopTracksMedium","topTracksLong","setTopTracksLong","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","selectedTimeRange","setSelectedTimeRange","selectedCategory","setSelectedCategory","spotifyApi","clientId","current","setAccessToken","getMyTopArtists","time_range","limit","then","res","body","items","calculateTopGenres","artists","allGenres","flatMap","artist","genres","genreCounts","reduce","counts","genre","Object","entries","sort","a","b","slice","timeRanges","forEach","timeRange","topGenres","getMyTopTracks","console","log","getMyRecentlyPlayedTracks","response","className","children","onCategorySelect","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_artist$images$","src","images","url","alt","name","href","external_urls","spotify","target","rel","_artist$images$2","_artist$images$3","track","_track$album","_track$album$images$","album","join","_track$album2","_track$album2$images$","_track$album3","_track$album3$images$","length","count","value","max","Math","_","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport Header from \"../Header/Header\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport Tracks from \"../Tracks/Tracks\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [topTracks, setTopTracks] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [topArtistsShort, setTopArtistsShort] = useState([]);\n  const [topArtistsMedium, setTopArtistsMedium] = useState([]);\n  const [topArtistsLong, setTopArtistsLong] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"short_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsShort(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"medium_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsMedium(res.body.items);\n      });\n    spotifyApi.current\n      .getMyTopArtists({ time_range: \"long_term\", limit: 50 })\n      .then((res) => {\n        setTopArtistsLong(res.body.items);\n      });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    const calculateTopGenres = (artists) => {\n      const allGenres = artists.flatMap((artist) => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange, limit: 50 })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n\n    spotifyApi.current.getMyTopTracks({ limit: 50 }).then((res) => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"short_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksShort(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"medium_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksMedium(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"long_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksLong(res.body.items);\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n      <Header onCategorySelect={setSelectedCategory} />\n      {selectedCategory && selectedCategory !== \"recently-played\" && (\n        <section className=\"dashboard__hero\">\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"short_term\")}\n          >\n            Past 4 weeks\n          </button>\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"medium_term\")}\n          >\n            Past 6 months\n          </button>\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"long_term\")}\n          >\n            All time\n          </button>\n        </section>\n      )}\n\n      <div className=\"dashboard__top\">\n       \n              <div className=\"dashboard__artists\">\n                {selectedTimeRange === \"short_term\" &&\n                  topArtistsShort.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topArtistsMedium.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topArtistsLong.map((artist, index) => (\n                    <div key={index} className=\"artist\">\n                      <div className=\"artist__container\">\n                        <span className=\"artist__rank\">{index + 1}</span>\n                        <img\n                          src={artist.images[0]?.url}\n                          alt={artist.name}\n                          className=\"artist__image\"\n                        />\n                      </div>\n                      <span className=\"artist__title\">{artist.name}</span>\n                      <div className=\"artist__link\">\n                        <a\n                          href={artist.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"artist__btn\"\n                        >\n                          <img src={SpotifyIcon} alt=\"Spotify Icon\" />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n         \n       \n              <Tracks selectedTimeRange={selectedTimeRange} setSelectedTimeRange={setSelectedTimeRange} />\n                {selectedTimeRange === \"short_term\" &&\n                  topTracksShort.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topTracksMedium.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topTracksLong.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n         \n              <div className=\"dashboard__genres\">\n                {selectedTimeRange === \"short_term\" &&\n                  topGenresShort.length > 0 && (\n                    <>\n                      {topGenresShort.map(([genre, count], index) => (\n                        <div key={index} className=\"genre\">\n                          <div className=\"genre__container\">\n                            <span className=\"genre__rank\">{index + 1}</span>\n                            <span className=\"genre__title\">{genre}</span>\n                          </div>\n                          <progress\n                            value={count}\n                            max={Math.max(\n                              ...topGenresShort.map(([_, count]) => count)\n                            )}\n                          ></progress>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                {selectedTimeRange === \"medium_term\" &&\n                  topGenresMedium.length > 0 && (\n                    <>\n                      {topGenresMedium.map(([genre, count], index) => (\n                        <div key={index} className=\"genre\">\n                          <span className=\"genre__rank\">{index + 1}</span>\n                          <span className=\"genre__title\">{genre}</span>\n                          <progress\n                            value={count}\n                            max={Math.max(\n                              ...topGenresMedium.map(([_, count]) => count)\n                            )}\n                          ></progress>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                {selectedTimeRange === \"long_term\" &&\n                  topGenresLong.length > 0 && (\n                    <>\n                      {topGenresLong.map(\n                        ([genre, count], index) => (\n                          console.log(\"count\", count),\n                          (\n                            <div key={index} className=\"genre\">\n                              <span className=\"genre__rank\">{index + 1}</span>\n                              <span className=\"genre__title\">{genre}</span>\n                              <progress\n                                value={count}\n                                max={Math.max(\n                                  ...topGenresLong.map(([_, count]) => count)\n                                )}\n                              ></progress>\n                            </div>\n                          )\n                        )\n                      )}\n                    </>\n                  )}\n              </div>\n        \n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n       \n      </div>\n    \n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}