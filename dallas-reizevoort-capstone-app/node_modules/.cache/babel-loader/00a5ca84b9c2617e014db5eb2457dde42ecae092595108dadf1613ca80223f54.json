{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Genres/Genres.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport spotifyWebApi from 'spotify-web-api-node';\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Genres({\n  accessToken,\n  selectedTimeRange\n}) {\n  _s();\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  const calculateTopGenres = artists => {\n    const allGenres = artists.flatMap(artist => artist.genres);\n    const genreCounts = allGenres.reduce((counts, genre) => {\n      counts[genre] = (counts[genre] || 0) + 1;\n      return counts;\n    }, {});\n    return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard__genres\",\n    children: [selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: topGenresShort.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"genre__rank\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"genre__title\",\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: count,\n          max: Math.max(...topGenresShort.map(([_, count]) => count))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false), selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: topGenresMedium.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"genre__rank\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"genre__title\",\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: count,\n          max: Math.max(...topGenresMedium.map(([_, count]) => count))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this))\n    }, void 0, false), selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: topGenresLong.map(([genre, count], index) => (console.log(\"count\", count), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"genre__rank\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"genre__title\",\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: count,\n          max: Math.max(...topGenresLong.map(([_, count]) => count))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)))\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Genres, \"QjEPQZCKaNppTEGpSbq2kwSc+V8=\");\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useState","useEffect","useRef","spotifyWebApi","SpotifyIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Genres","accessToken","selectedTimeRange","_s","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","spotifyApi","clientId","calculateTopGenres","artists","allGenres","flatMap","artist","genres","genreCounts","reduce","counts","genre","Object","entries","sort","a","b","slice","className","children","length","map","count","index","fileName","_jsxFileName","lineNumber","columnNumber","value","max","Math","_","console","log","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Genres/Genres.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport spotifyWebApi from 'spotify-web-api-node';\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\n\nfunction Genres( {accessToken, selectedTimeRange}) {\n    const [topGenresShort, setTopGenresShort] = useState([]);\n    const [topGenresMedium, setTopGenresMedium] = useState([]);\n    const [topGenresLong, setTopGenresLong] = useState([]);\n\n    const spotifyApi = useRef(\n        new spotifyWebApi({\n            clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n        })\n    );\n\n    const calculateTopGenres = (artists) => {\n        const allGenres = artists.flatMap((artist) => artist.genres);\n        const genreCounts = allGenres.reduce((counts, genre) => {\n          counts[genre] = (counts[genre] || 0) + 1;\n          return counts;\n        }, {});\n        return Object.entries(genreCounts)\n          .sort((a, b) => b[1] - a[1])\n          .slice(0, 15);\n      };\n\n      return (\n        <div className=\"dashboard__genres\">\n        {selectedTimeRange === \"short_term\" &&\n          topGenresShort.length > 0 && (\n            <>\n              {topGenresShort.map(([genre, count], index) => (\n                <div key={index} className=\"genre\">\n                  <div className=\"genre__container\">\n                    <span className=\"genre__rank\">{index + 1}</span>\n                    <span className=\"genre__title\">{genre}</span>\n                  </div>\n                  <progress\n                    value={count}\n                    max={Math.max(\n                      ...topGenresShort.map(([_, count]) => count)\n                    )}\n                  ></progress>\n                </div>\n              ))}\n            </>\n          )}\n        {selectedTimeRange === \"medium_term\" &&\n          topGenresMedium.length > 0 && (\n            <>\n              {topGenresMedium.map(([genre, count], index) => (\n                <div key={index} className=\"genre\">\n                  <span className=\"genre__rank\">{index + 1}</span>\n                  <span className=\"genre__title\">{genre}</span>\n                  <progress\n                    value={count}\n                    max={Math.max(\n                      ...topGenresMedium.map(([_, count]) => count)\n                    )}\n                  ></progress>\n                </div>\n              ))}\n            </>\n          )}\n        {selectedTimeRange === \"long_term\" &&\n          topGenresLong.length > 0 && (\n            <>\n              {topGenresLong.map(\n                ([genre, count], index) => (\n                  console.log(\"count\", count),\n                  (\n                    <div key={index} className=\"genre\">\n                      <span className=\"genre__rank\">{index + 1}</span>\n                      <span className=\"genre__title\">{genre}</span>\n                      <progress\n                        value={count}\n                        max={Math.max(\n                          ...topGenresLong.map(([_, count]) => count)\n                        )}\n                      ></progress>\n                    </div>\n                  )\n                )\n              )}\n            </>\n          )}\n      </div>\n      )\n\n}\n\nexport default Genres;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}