{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Header/HeaderTest.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Collapse from '@mui/material/Collapse';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport ChevronRight from '@mui/icons-material/ChevronRight';\nimport Settings from '../Settings/Settings'; // Import the Settings component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\n// Update the navItems to match your previous Header component\nconst navItems = [{\n  name: 'Artists',\n  path: '/dashboard/artists'\n}, {\n  name: 'Genres',\n  path: '/dashboard/genres'\n}, {\n  name: 'Recent',\n  path: '/dashboard/recent'\n}, {\n  name: 'Mood',\n  path: '/dashboard/mood'\n}, {\n  name: 'Playlist',\n  path: '/dashboard/playlist'\n}];\nconst statsItems = [{\n  name: 'Tracks',\n  path: '/dashboard/tracks'\n}\n// Add more items if needed\n];\nfunction DrawerAppBar(props) {\n  _s();\n  const {\n    window\n  } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [openStats, setOpenStats] = React.useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(prevState => !prevState);\n  };\n  const handleStatsToggle = () => {\n    setOpenStats(prevState => !prevState);\n  };\n  const drawer = /*#__PURE__*/_jsxDEV(Box, {\n    onClick: handleDrawerToggle,\n    sx: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        my: 2\n      },\n      children: \"Soundtrack Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        onClick: handleStatsToggle,\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), openStats ? /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: openStats,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          component: \"div\",\n          disablePadding: true,\n          children: statsItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              sx: {\n                pl: 4\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, item.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), navItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          sx: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  // Rest of your code...\n}\n_s(DrawerAppBar, \"xn5N1UJgx8iiO6MOlSoID0b5Ot4=\");\n_c = DrawerAppBar;\nexport default DrawerAppBar;\nvar _c;\n$RefreshReg$(_c, \"DrawerAppBar\");","map":{"version":3,"names":["React","PropTypes","AppBar","Box","CssBaseline","Divider","Drawer","IconButton","List","ListItem","ListItemButton","ListItemText","MenuIcon","Toolbar","Typography","Button","Collapse","ExpandMore","ChevronRight","Settings","jsxDEV","_jsxDEV","drawerWidth","navItems","name","path","statsItems","DrawerAppBar","props","_s","window","mobileOpen","setMobileOpen","useState","openStats","setOpenStats","handleDrawerToggle","prevState","handleStatsToggle","drawer","onClick","sx","textAlign","children","variant","my","fileName","_jsxFileName","lineNumber","columnNumber","primary","in","timeout","unmountOnExit","component","disablePadding","map","item","pl","container","undefined","document","body","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Header/HeaderTest.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Collapse from '@mui/material/Collapse';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport ChevronRight from '@mui/icons-material/ChevronRight';\nimport Settings from '../Settings/Settings'; // Import the Settings component\n\nconst drawerWidth = 240;\n\n// Update the navItems to match your previous Header component\nconst navItems = [\n    { name: 'Artists', path: '/dashboard/artists' },\n    { name: 'Genres', path: '/dashboard/genres' },\n    { name: 'Recent', path: '/dashboard/recent' },\n    { name: 'Mood', path: '/dashboard/mood' },\n    { name: 'Playlist', path: '/dashboard/playlist' },\n];\n\nconst statsItems = [\n    { name: 'Tracks', path: '/dashboard/tracks' },\n    // Add more items if needed\n];\n\nfunction DrawerAppBar(props) {\n    const { window } = props;\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const [openStats, setOpenStats] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen((prevState) => !prevState);\n    };\n\n    const handleStatsToggle = () => {\n        setOpenStats((prevState) => !prevState);\n    };\n\n    const drawer = (\n        <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\n            <Typography variant=\"h6\" sx={{ my: 2 }}>\n                Soundtrack Analyzer\n            </Typography>\n            <Divider />\n            <List>\n                <ListItemButton onClick={handleStatsToggle}>\n                    <ListItemText primary=\"Statistics\" />\n                    {openStats ? <ExpandMore /> : <ChevronRight />}\n                </ListItemButton>\n                <Collapse in={openStats} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        {statsItems.map((item) => (\n                            <ListItem key={item.name} disablePadding>\n                                <ListItemButton sx={{ pl: 4 }}>\n                                    <ListItemText primary={item.name} />\n                                </ListItemButton>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Collapse>\n                {navItems.map((item) => (\n                    <ListItem key={item.name} disablePadding>\n                        <ListItemButton sx={{ textAlign: 'center' }}>\n                            <ListItemText primary={item.name} />\n                        </ListItemButton>\n                    </ListItem>\n                ))}\n            </List>\n            <Settings /> {/* Include the Settings component */}\n        </Box>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    // Rest of your code...\n}\n\nexport default DrawerAppBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}