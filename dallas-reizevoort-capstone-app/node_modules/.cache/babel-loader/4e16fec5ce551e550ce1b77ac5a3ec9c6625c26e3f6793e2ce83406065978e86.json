{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Playlist/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  accessToken\n}) {\n  _s();\n  const [userID, setUserID] = useState();\n  const spotifyApi = useRef(new SpotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Get the user's ID\n    spotifyApi.current.getMe().then(res => {\n      setUserID(res.body.id);\n    });\n  }, [accessToken]);\n  const createPlaylist = async () => {\n    // Get the user's top tracks\n    const topTracksResponse = await spotifyApi.current.getMyTopTracks({\n      limit: 5\n    });\n    const trackIds = topTracksResponse.body.items.map(track => track.id);\n\n    // Get recommendations based on these tracks\n    const recommendationsResponse = await spotifyApi.current.getRecommendations({\n      seed_tracks: trackIds\n    });\n    const trackUris = recommendationsResponse.body.tracks.map(track => track.uri);\n\n    // Create a new playlist\n    spotifyApi.current.createPlaylist(userID, 'New Playlist', {\n      'public': false\n    }, (err, data) => {\n      if (err) console.error(err);else {\n        const playlistId = data.body.id;\n\n        // Add the recommended tracks to the playlist\n        spotifyApi.current.addTracksToPlaylist(playlistId, trackUris, (err, data) => {\n          if (err) console.error(err);else console.log('Created playlist!');\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard__playlist\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPlaylist,\n      children: \"Create Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Playlist, \"H5iFuYpwQOpheRKJW6IqxO1YhGE=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SpotifyWebApi","jsxDEV","_jsxDEV","Playlist","accessToken","_s","userID","setUserID","spotifyApi","clientId","current","setAccessToken","getMe","then","res","body","id","createPlaylist","topTracksResponse","getMyTopTracks","limit","trackIds","items","map","track","recommendationsResponse","getRecommendations","seed_tracks","trackUris","tracks","uri","err","data","console","error","playlistId","addTracksToPlaylist","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Playlist/Playlist.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\n\nfunction Playlist({ accessToken }) {\n    const [userID, setUserID] = useState();\n\n    const spotifyApi = useRef(\n        new SpotifyWebApi({\n            clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n        })\n    );\n\n    useEffect(() => {\n        if (!accessToken) return;\n        spotifyApi.current.setAccessToken(accessToken);\n    \n        // Get the user's ID\n        spotifyApi.current.getMe().then((res) => {\n            setUserID(res.body.id);\n        });\n    }, [accessToken]);\n    \n    const createPlaylist = async () => {\n        // Get the user's top tracks\n        const topTracksResponse = await spotifyApi.current.getMyTopTracks({ limit: 5 });\n        const trackIds = topTracksResponse.body.items.map(track => track.id);\n    \n        // Get recommendations based on these tracks\n        const recommendationsResponse = await spotifyApi.current.getRecommendations({ seed_tracks: trackIds });\n        const trackUris = recommendationsResponse.body.tracks.map(track => track.uri);\n    \n        // Create a new playlist\n        spotifyApi.current.createPlaylist(userID, 'New Playlist', { 'public' : false }, (err, data) => {\n            if (err) console.error(err);\n            else {\n                const playlistId = data.body.id;\n    \n                // Add the recommended tracks to the playlist\n                spotifyApi.current.addTracksToPlaylist(playlistId, trackUris, (err, data) => {\n                    if (err) console.error(err);\n                    else console.log('Created playlist!');\n                });\n            }\n        });\n    };\n\n    return (\n        <div className=\"dashboard__playlist\">\n            <button onClick={createPlaylist}>Create Playlist</button>\n        </div>\n    );\n}\n\nexport default Playlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,QAAQA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAEtC,MAAMW,UAAU,GAAGT,MAAM,CACrB,IAAIC,aAAa,CAAC;IACdS,QAAQ,EAAE;EACd,CAAC,CACL,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZ,IAAI,CAACM,WAAW,EAAE;IAClBI,UAAU,CAACE,OAAO,CAACC,cAAc,CAACP,WAAW,CAAC;;IAE9C;IACAI,UAAU,CAACE,OAAO,CAACE,KAAK,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACrCP,SAAS,CAACO,GAAG,CAACC,IAAI,CAACC,EAAE,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,EAAE,CAACZ,WAAW,CAAC,CAAC;EAEjB,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,MAAMC,iBAAiB,GAAG,MAAMV,UAAU,CAACE,OAAO,CAACS,cAAc,CAAC;MAAEC,KAAK,EAAE;IAAE,CAAC,CAAC;IAC/E,MAAMC,QAAQ,GAAGH,iBAAiB,CAACH,IAAI,CAACO,KAAK,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACR,EAAE,CAAC;;IAEpE;IACA,MAAMS,uBAAuB,GAAG,MAAMjB,UAAU,CAACE,OAAO,CAACgB,kBAAkB,CAAC;MAAEC,WAAW,EAAEN;IAAS,CAAC,CAAC;IACtG,MAAMO,SAAS,GAAGH,uBAAuB,CAACV,IAAI,CAACc,MAAM,CAACN,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACM,GAAG,CAAC;;IAE7E;IACAtB,UAAU,CAACE,OAAO,CAACO,cAAc,CAACX,MAAM,EAAE,cAAc,EAAE;MAAE,QAAQ,EAAG;IAAM,CAAC,EAAE,CAACyB,GAAG,EAAEC,IAAI,KAAK;MAC3F,IAAID,GAAG,EAAEE,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC,CAAC,KACvB;QACD,MAAMI,UAAU,GAAGH,IAAI,CAACjB,IAAI,CAACC,EAAE;;QAE/B;QACAR,UAAU,CAACE,OAAO,CAAC0B,mBAAmB,CAACD,UAAU,EAAEP,SAAS,EAAE,CAACG,GAAG,EAAEC,IAAI,KAAK;UACzE,IAAID,GAAG,EAAEE,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC,CAAC,KACvBE,OAAO,CAACI,GAAG,CAAC,mBAAmB,CAAC;QACzC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACInC,OAAA;IAAKoC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCrC,OAAA;MAAQsC,OAAO,EAAEvB,cAAe;MAAAsB,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd;AAACvC,EAAA,CAhDQF,QAAQ;AAAA0C,EAAA,GAAR1C,QAAQ;AAkDjB,eAAeA,QAAQ;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}