{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Settings/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Settings.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserSettings({\n  logout,\n  setLogout\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    if (logout) {\n      // Clear the access token, refresh token, and expiration time from the component's state\n      setAccessToken(null);\n      setRefreshToken(null);\n      setExpiresIn(null);\n\n      // Clear the interval that refreshes the access token\n      if (refreshInterval) {\n        clearInterval(refreshInterval);\n        setRefreshInterval(null);\n      }\n      return;\n    }\n  }, [logout]);\n  const handleEmailOpt = e => {\n    // handle email opt in/out\n  };\n  const handleSpotifyRedirect = () => {\n    // redirect to user's Spotify page\n    window.location.href = \"https://open.spotify.com\";\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleLogout = () => {\n    // Log the value of the access token before removing it\n    console.log('Access token before logout:', localStorage.getItem('accessToken'));\n\n    // Clear the access token from local storage\n    localStorage.removeItem('accessToken');\n\n    // Log the value of the access token after removing it\n    console.log('Access token after logout:', localStorage.getItem('accessToken'));\n\n    // Set logout to true\n    setLogout(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"settings__title\",\n      onClick: toggleDropdown,\n      children: \"Settings \\u25BE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"settings__dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: handleEmailOpt,\n        children: \"Toggle Email Opt-In/Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: handleSpotifyRedirect,\n        children: \"Go to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(UserSettings, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n_c = UserSettings;\nexport default UserSettings;\nvar _c;\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserSettings","logout","setLogout","_s","isOpen","setIsOpen","setAccessToken","setRefreshToken","setExpiresIn","refreshInterval","clearInterval","setRefreshInterval","handleEmailOpt","e","handleSpotifyRedirect","window","location","href","toggleDropdown","handleLogout","console","log","localStorage","getItem","removeItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Settings/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Settings.scss\";\n\nfunction UserSettings({ logout, setLogout }) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (logout) {\n      // Clear the access token, refresh token, and expiration time from the component's state\n      setAccessToken(null);\n      setRefreshToken(null);\n      setExpiresIn(null);\n\n      // Clear the interval that refreshes the access token\n      if (refreshInterval) {\n        clearInterval(refreshInterval);\n        setRefreshInterval(null);\n      }\n\n      return;\n    }\n  }, [logout]);\n\n  const handleEmailOpt = (e) => {\n    // handle email opt in/out\n  };\n\n  const handleSpotifyRedirect = () => {\n    // redirect to user's Spotify page\n    window.location.href = \"https://open.spotify.com\";\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleLogout = () => {\n    // Log the value of the access token before removing it\n    console.log('Access token before logout:', localStorage.getItem('accessToken'));\n  \n    // Clear the access token from local storage\n    localStorage.removeItem('accessToken');\n  \n    // Log the value of the access token after removing it\n    console.log('Access token after logout:', localStorage.getItem('accessToken'));\n  \n    // Set logout to true\n    setLogout(true);\n  };\n\n  return (\n    <div className=\"settings\">\n      <h2 className=\"settings__title\" onClick={toggleDropdown}>\n        Settings &#9662;\n      </h2>\n      {isOpen && (\n        <ul className=\"settings__dropdown\">\n          <li onClick={handleEmailOpt}>Toggle Email Opt-In/Out</li>\n          <li onClick={handleSpotifyRedirect}>Go to Spotify</li>\n          <li onClick={handleLogout}>Logout</li>\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default UserSettings;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,YAAYA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,EAAE;MACV;MACAK,cAAc,CAAC,IAAI,CAAC;MACpBC,eAAe,CAAC,IAAI,CAAC;MACrBC,YAAY,CAAC,IAAI,CAAC;;MAElB;MACA,IAAIC,eAAe,EAAE;QACnBC,aAAa,CAACD,eAAe,CAAC;QAC9BE,kBAAkB,CAAC,IAAI,CAAC;MAC1B;MAEA;IACF;EACF,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,MAAMW,cAAc,GAAIC,CAAC,IAAK;IAC5B;EAAA,CACD;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,0BAA0B;EACnD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;;IAE/E;IACAD,YAAY,CAACE,UAAU,CAAC,aAAa,CAAC;;IAEtC;IACAJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;;IAE9E;IACArB,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACEH,OAAA;IAAK0B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB3B,OAAA;MAAI0B,SAAS,EAAC,iBAAiB;MAACE,OAAO,EAAET,cAAe;MAAAQ,QAAA,EAAC;IAEzD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJ3B,MAAM,iBACLL,OAAA;MAAI0B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAChC3B,OAAA;QAAI4B,OAAO,EAAEf,cAAe;QAAAc,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDhC,OAAA;QAAI4B,OAAO,EAAEb,qBAAsB;QAAAY,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDhC,OAAA;QAAI4B,OAAO,EAAER,YAAa;QAAAO,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC5B,EAAA,CA7DQH,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA+DrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}