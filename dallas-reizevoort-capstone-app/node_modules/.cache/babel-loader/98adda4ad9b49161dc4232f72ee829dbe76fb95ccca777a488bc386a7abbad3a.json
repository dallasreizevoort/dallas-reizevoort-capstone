{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Mood/Mood.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mood({\n  accessToken\n}) {\n  _s();\n  const ref = useRef();\n  const spotifyApi = useRef(new SpotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n\n  // Define the zoomed function outside of the useEffect hook\n  function zoomed(event) {\n    const g = d3.select(ref.current).select(\"g\");\n    g.attr(\"transform\", event.transform);\n  }\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      const trackIds = response.body.items.map(item => item.track.id);\n      return spotifyApi.current.getAudioFeaturesForTracks(trackIds);\n    }).then(response => {\n      const audioFeatures = response.body.audio_features;\n      const moodData = audioFeatures.map((features, index) => ({\n        date: new Date().getTime() - index * 1000 * 60 * 60 * 24,\n        // This is a placeholder. You should use the actual play time of each track.\n        valence: features.valence\n      }));\n      const moodCategory = valence => valence < 0.33 ? \"Sad\" : valence < 0.66 ? \"Neutral\" : \"Happy\";\n      moodData.forEach(d => {\n        d.mood = moodCategory(d.valence);\n      });\n      const svg = d3.select(ref.current);\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 50,\n        left: 50\n      };\n      const width = 960 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n      const colorScale = d3.scaleOrdinal().domain([\"Sad\", \"Neutral\", \"Happy\"]).range([\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\"]);\n      const xScale = d3.scaleTime().domain(d3.extent(moodData, d => d.date)).range([0, width]);\n      const yScale = d3.scaleLinear().domain([0, 1]).range([height, 0]);\n      const line = d3.line().x(d => xScale(d.date)).y(d => yScale(d.valence));\n      const g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      g.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(xScale)).append(\"text\").attr(\"fill\", \"#fff\").attr(\"y\", 20).attr(\"x\", width / 2).attr(\"dy\", \"0.71em\").attr(\"text-anchor\", \"end\").text(\"Time\");\n      g.append(\"g\").call(d3.axisLeft(yScale)).append(\"text\").attr(\"fill\", \"#fff\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", -40).attr(\"dy\", \"0.71em\").attr(\"text-anchor\", \"end\").text(\"Mood (valence)\");\n\n      // Add a tooltip\n      const tooltip = d3.select(\"body\").append(\"div\").style(\"position\", \"absolute\").style(\"z-index\", \"10\").style(\"visibility\", \"hidden\").style(\"background\", \"#333\").style(\"border-radius\", \"5px\").style(\"color\", \"#fff\").style(\"padding\", \"10px\").style(\"opacity\", \"0.7\").text(\"a simple tooltip\");\n      g.selectAll(\".dot\").data(moodData).enter().append(\"circle\").attr(\"class\", \"dot\").attr(\"cx\", d => xScale(d.date)).attr(\"cy\", d => yScale(d.valence)).attr(\"r\", 5).on(\"mouseover\", function (d) {\n        tooltip.text(`Mood: ${d.mood}, Valence: ${d.valence}`);\n        return tooltip.style(\"visibility\", \"visible\");\n      }).on(\"mousemove\", function (event) {\n        return tooltip.style(\"top\", event.pageY - 10 + \"px\").style(\"left\", event.pageX + 10 + \"px\");\n      }).on(\"mouseout\", function () {\n        return tooltip.style(\"visibility\", \"hidden\");\n      });\n      const area = d3.area().x(d => xScale(d.date)).y0(height).y1(d => yScale(d.valence));\n      g.append(\"path\").datum(moodData).attr(\"fill\", \"steelblue\").attr(\"d\", area);\n      svg.append(\"text\").attr(\"x\", width / 2).attr(\"y\", 20).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"20px\").style(\"text-decoration\", \"underline\").style(\"fill\", \"#fff\").text(\"Mood Over Time\");\n      const zoom = d3.zoom().scaleExtent([1, 10]).translateExtent([[0, 0], [width, height]]).on(\"zoom\", zoomed);\n      svg.call(zoom);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref,\n    width: \"960\",\n    height: \"500\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 22\n  }, this);\n}\n_s(Mood, \"DPQ0+wisHBllscv5YB3Te63pQiY=\");\n_c = Mood;\nexport default Mood;\nvar _c;\n$RefreshReg$(_c, \"Mood\");","map":{"version":3,"names":["React","useEffect","useRef","d3","SpotifyWebApi","jsxDEV","_jsxDEV","Mood","accessToken","_s","ref","spotifyApi","clientId","zoomed","event","g","select","current","attr","transform","setAccessToken","getMyRecentlyPlayedTracks","limit","then","response","trackIds","body","items","map","item","track","id","getAudioFeaturesForTracks","audioFeatures","audio_features","moodData","features","index","date","Date","getTime","valence","moodCategory","forEach","d","mood","svg","margin","top","right","bottom","left","width","height","colorScale","scaleOrdinal","domain","range","xScale","scaleTime","extent","yScale","scaleLinear","line","x","y","append","call","axisBottom","text","axisLeft","tooltip","style","selectAll","data","enter","on","pageY","pageX","area","y0","y1","datum","zoom","scaleExtent","translateExtent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Mood/Mood.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nfunction Mood({ accessToken }) {\n    const ref = useRef();\n    const spotifyApi = useRef(\n        new SpotifyWebApi({\n            clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n        })\n    );\n\n    // Define the zoomed function outside of the useEffect hook\n    function zoomed(event) {\n        const g = d3.select(ref.current).select(\"g\");\n        g.attr(\"transform\", event.transform);\n    }\n\n    useEffect(() => {\n        if (!accessToken) return;\n        spotifyApi.current.setAccessToken(accessToken);\n        spotifyApi.current\n            .getMyRecentlyPlayedTracks({ limit: 50 })\n            .then((response) => {\n                const trackIds = response.body.items.map(item => item.track.id);\n                return spotifyApi.current.getAudioFeaturesForTracks(trackIds);\n            })\n            .then((response) => {\n                const audioFeatures = response.body.audio_features;\n\n                const moodData = audioFeatures.map((features, index) => ({\n                    date: new Date().getTime() - index * 1000 * 60 * 60 * 24, // This is a placeholder. You should use the actual play time of each track.\n                    valence: features.valence,\n                }));\n\n                const moodCategory = (valence) =>\n                    valence < 0.33 ? \"Sad\" : valence < 0.66 ? \"Neutral\" : \"Happy\";\n                moodData.forEach((d) => {\n                    d.mood = moodCategory(d.valence);\n                });\n\n                const svg = d3.select(ref.current);\n                const margin = { top: 20, right: 20, bottom: 50, left: 50 };\n                const width = 960 - margin.left - margin.right;\n                const height = 500 - margin.top - margin.bottom;\n\n                const colorScale = d3.scaleOrdinal()\n  .domain([\"Sad\", \"Neutral\", \"Happy\"])\n  .range([\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\"]);\n\n                const xScale = d3\n                    .scaleTime()\n                    .domain(d3.extent(moodData, (d) => d.date))\n                    .range([0, width]);\n                const yScale = d3.scaleLinear().domain([0, 1]).range([height, 0]);\n\n                const line = d3\n                    .line()\n                    .x((d) => xScale(d.date))\n                    .y((d) => yScale(d.valence));\n\n                const g = svg\n                    .append(\"g\")\n                    .attr(\n                        \"transform\",\n                        \"translate(\" + margin.left + \",\" + margin.top + \")\"\n                    );\n\n                g.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\n                    .call(d3.axisBottom(xScale))\n                    .append(\"text\")\n                    .attr(\"fill\", \"#fff\")\n                    .attr(\"y\", 20)\n                    .attr(\"x\", width / 2)\n                    .attr(\"dy\", \"0.71em\")\n                    .attr(\"text-anchor\", \"end\")\n                    .text(\"Time\");\n\n                g.append(\"g\")\n                    .call(d3.axisLeft(yScale))\n                    .append(\"text\")\n                    .attr(\"fill\", \"#fff\")\n                    .attr(\"transform\", \"rotate(-90)\")\n                    .attr(\"y\", -40)\n                    .attr(\"dy\", \"0.71em\")\n                    .attr(\"text-anchor\", \"end\")\n                    .text(\"Mood (valence)\");\n\n                // Add a tooltip\n                const tooltip = d3.select(\"body\").append(\"div\")\n                    .style(\"position\", \"absolute\")\n                    .style(\"z-index\", \"10\")\n                    .style(\"visibility\", \"hidden\")\n                    .style(\"background\", \"#333\")\n                    .style(\"border-radius\", \"5px\")\n                    .style(\"color\", \"#fff\")\n                    .style(\"padding\", \"10px\")\n                    .style(\"opacity\", \"0.7\")\n                    .text(\"a simple tooltip\");\n\n                g.selectAll(\".dot\")\n                    .data(moodData)\n                    .enter().append(\"circle\")\n                    .attr(\"class\", \"dot\")\n                    .attr(\"cx\", (d) => xScale(d.date))\n                    .attr(\"cy\", (d) => yScale(d.valence))\n                    .attr(\"r\", 5)\n                    .on(\"mouseover\", function (d) {\n                        tooltip.text(`Mood: ${d.mood}, Valence: ${d.valence}`);\n                        return tooltip.style(\"visibility\", \"visible\");\n                    })\n                    .on(\"mousemove\", function (event) {\n                        return tooltip\n                            .style(\"top\", event.pageY - 10 + \"px\")\n                            .style(\"left\", event.pageX + 10 + \"px\");\n                    })\n                    .on(\"mouseout\", function () {\n                        return tooltip.style(\"visibility\", \"hidden\");\n                    });\n\n                const area = d3.area()\n                    .x((d) => xScale(d.date))\n                    .y0(height)\n                    .y1((d) => yScale(d.valence));\n\n                g.append(\"path\")\n                    .datum(moodData)\n                    .attr(\"fill\", \"steelblue\")\n                    .attr(\"d\", area);\n\n                svg\n                    .append(\"text\")\n                    .attr(\"x\", width / 2)\n                    .attr(\"y\", 20)\n                    .attr(\"text-anchor\", \"middle\")\n                    .style(\"font-size\", \"20px\")\n                    .style(\"text-decoration\", \"underline\")\n                    .style(\"fill\", \"#fff\")\n                    .text(\"Mood Over Time\");\n\n                const zoom = d3\n                    .zoom()\n                    .scaleExtent([1, 10])\n                    .translateExtent([\n                        [0, 0],\n                        [width, height],\n                      ])\n                      .on(\"zoom\", zoomed);\n            \n                    svg.call(zoom);\n                  });\n              }, [accessToken]);\n            \n              return <svg ref={ref} width=\"960\" height=\"500\" />;\n            }\n            \n            export default Mood;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}