{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nconst spotifyApi = new SpotifyWebApi();\nfunction SpotifyPlayer({\n  accessToken,\n  trackId\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n\n    // Create a new player\n    const newPlayer = new window.Spotify.Player({\n      name: 'Web Playback SDK Player',\n      getOAuthToken: cb => {\n        cb(accessToken);\n      }\n    });\n\n    // Error handling\n    newPlayer.addListener('initialization_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    newPlayer.addListener('authentication_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    newPlayer.addListener('account_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    newPlayer.addListener('playback_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n\n    // Playback status updates\n    newPlayer.addListener('player_state_changed', state => {\n      console.log(state);\n    });\n\n    // Ready\n    newPlayer.addListener('ready', ({\n      device_id\n    }) => {\n      console.log('Ready with Device ID', device_id);\n      setPlayer(newPlayer);\n    });\n\n    // Not Ready\n    newPlayer.addListener('not_ready', ({\n      device_id\n    }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    // Connect to the player\n    newPlayer.connect();\n    return () => {\n      // Clean up on unmount\n      newPlayer.disconnect();\n    };\n  }, [accessToken]);\n  useEffect(() => {\n    if (!player) return;\n    if (!trackId) return;\n\n    // Play the track using spotify-web-api-node\n    spotifyApi.play({\n      uris: [`spotify:track:${trackId}`]\n    }).then(function () {\n      console.log('Playback started');\n    }, function (err) {\n      console.error('Something went wrong!', err);\n    });\n  }, [player, trackId]);\n  return null; // This component does not render anything\n}\n_s(SpotifyPlayer, \"iNRC7XIAs1kljPy0aLkR3y2W4C0=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useEffect","useState","SpotifyWebApi","spotifyApi","SpotifyPlayer","accessToken","trackId","_s","player","setPlayer","setAccessToken","newPlayer","window","Spotify","Player","name","getOAuthToken","cb","addListener","message","console","error","state","log","device_id","connect","disconnect","play","uris","then","err","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/SpotifyPlayer/SpotifyPlayer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction SpotifyPlayer({ accessToken, trackId }) {\n  const [player, setPlayer] = useState(null);\n\n  useEffect(() => {\n    if (!accessToken) return;\n\n    spotifyApi.setAccessToken(accessToken);\n\n    // Create a new player\n    const newPlayer = new window.Spotify.Player({\n      name: 'Web Playback SDK Player',\n      getOAuthToken: cb => { cb(accessToken); }\n    });\n\n    // Error handling\n    newPlayer.addListener('initialization_error', ({ message }) => { console.error(message); });\n    newPlayer.addListener('authentication_error', ({ message }) => { console.error(message); });\n    newPlayer.addListener('account_error', ({ message }) => { console.error(message); });\n    newPlayer.addListener('playback_error', ({ message }) => { console.error(message); });\n\n    // Playback status updates\n    newPlayer.addListener('player_state_changed', state => { console.log(state); });\n\n    // Ready\n    newPlayer.addListener('ready', ({ device_id }) => {\n      console.log('Ready with Device ID', device_id);\n      setPlayer(newPlayer);\n    });\n\n    // Not Ready\n    newPlayer.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    // Connect to the player\n    newPlayer.connect();\n\n    return () => {\n      // Clean up on unmount\n      newPlayer.disconnect();\n    };\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!player) return;\n    if (!trackId) return;\n\n    // Play the track using spotify-web-api-node\n    spotifyApi.play({ uris: [`spotify:track:${trackId}`] })\n      .then(function() {\n        console.log('Playback started');\n      }, function(err) {\n        console.error('Something went wrong!', err);\n      });\n  }, [player, trackId]);\n\n  return null; // This component does not render anything\n}\n\nexport default SpotifyPlayer;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,sBAAsB;AAEhD,MAAMC,UAAU,GAAG,IAAID,aAAa,CAAC,CAAC;AAEtC,SAASE,aAAaA,CAAC;EAAEC,WAAW;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,WAAW,EAAE;IAElBF,UAAU,CAACO,cAAc,CAACL,WAAW,CAAC;;IAEtC;IACA,MAAMM,SAAS,GAAG,IAAIC,MAAM,CAACC,OAAO,CAACC,MAAM,CAAC;MAC1CC,IAAI,EAAE,yBAAyB;MAC/BC,aAAa,EAAEC,EAAE,IAAI;QAAEA,EAAE,CAACZ,WAAW,CAAC;MAAE;IAC1C,CAAC,CAAC;;IAEF;IACAM,SAAS,CAACO,WAAW,CAAC,sBAAsB,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;IAC3FR,SAAS,CAACO,WAAW,CAAC,sBAAsB,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;IAC3FR,SAAS,CAACO,WAAW,CAAC,eAAe,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;IACpFR,SAAS,CAACO,WAAW,CAAC,gBAAgB,EAAE,CAAC;MAAEC;IAAQ,CAAC,KAAK;MAAEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;IAAE,CAAC,CAAC;;IAErF;IACAR,SAAS,CAACO,WAAW,CAAC,sBAAsB,EAAEI,KAAK,IAAI;MAAEF,OAAO,CAACG,GAAG,CAACD,KAAK,CAAC;IAAE,CAAC,CAAC;;IAE/E;IACAX,SAAS,CAACO,WAAW,CAAC,OAAO,EAAE,CAAC;MAAEM;IAAU,CAAC,KAAK;MAChDJ,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAEC,SAAS,CAAC;MAC9Cf,SAAS,CAACE,SAAS,CAAC;IACtB,CAAC,CAAC;;IAEF;IACAA,SAAS,CAACO,WAAW,CAAC,WAAW,EAAE,CAAC;MAAEM;IAAU,CAAC,KAAK;MACpDJ,OAAO,CAACG,GAAG,CAAC,4BAA4B,EAAEC,SAAS,CAAC;IACtD,CAAC,CAAC;;IAEF;IACAb,SAAS,CAACc,OAAO,CAAC,CAAC;IAEnB,OAAO,MAAM;MACX;MACAd,SAAS,CAACe,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACrB,WAAW,CAAC,CAAC;EAEjBL,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,MAAM,EAAE;IACb,IAAI,CAACF,OAAO,EAAE;;IAEd;IACAH,UAAU,CAACwB,IAAI,CAAC;MAAEC,IAAI,EAAE,CAAE,iBAAgBtB,OAAQ,EAAC;IAAE,CAAC,CAAC,CACpDuB,IAAI,CAAC,YAAW;MACfT,OAAO,CAACG,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC,EAAE,UAASO,GAAG,EAAE;MACfV,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAES,GAAG,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC,EAAE,CAACtB,MAAM,EAAEF,OAAO,CAAC,CAAC;EAErB,OAAO,IAAI,CAAC,CAAC;AACf;AAACC,EAAA,CAzDQH,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA2DtB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}