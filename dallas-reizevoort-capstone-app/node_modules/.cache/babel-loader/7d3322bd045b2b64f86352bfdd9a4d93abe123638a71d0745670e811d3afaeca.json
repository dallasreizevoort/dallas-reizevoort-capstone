{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Playlist/Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Playlist({\n  accessToken\n}) {\n  _s();\n  const [userID, setUserID] = useState();\n  const [playlist, setPlaylist] = useState(null); // New state variable for the playlist\n  const [newPlaylist, setNewPlaylist] = useState(null);\n  const [playlistDescription, setPlaylistDescription] = useState('');\n  const spotifyApi = useRef(new SpotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(playlist => {\n    console.log('Playlist state:', playlist);\n  }, [playlist]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    // Get the user's ID\n    spotifyApi.current.getMe().then(res => {\n      setUserID(res.body.id);\n      console.log('User ID:', res.body.id); // Log the user ID\n    });\n  }, [accessToken]);\n\n  // Cant use callbacks here, playlist stays undefined\n  const createPlaylist = async () => {\n    try {\n      // Get the user's top tracks\n      const topTracksResponse = await spotifyApi.current.getMyTopTracks({\n        limit: 5\n      });\n      const trackIds = topTracksResponse.body.items.map(track => track.id);\n\n      // Get recommendations based on these tracks\n      const recommendationsResponse = await spotifyApi.current.getRecommendations({\n        seed_tracks: trackIds\n      });\n      const trackUris = recommendationsResponse.body.tracks.map(track => track.uri);\n\n      // Create a new playlist in the state\n      setNewPlaylist({\n        name: 'New Playlist',\n        tracks: trackUris\n      });\n    } catch (err) {\n      console.error('Error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist__description\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create a new playlist based on your top tracks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPlaylist,\n      children: \"Create \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), playlist ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: playlist.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), playlist.tracks && playlist.tracks.items && playlist.tracks.items.length > 0 ? playlist.tracks.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [item.track.name, \" by \", item.track.artists[0].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tracks in playlist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No playlist data to display. Playlist state: \", JSON.stringify(playlist)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Playlist, \"q0NzaA4OOi7iStqf77cDI+uu2ow=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SpotifyWebApi","jsxDEV","_jsxDEV","Playlist","accessToken","_s","userID","setUserID","playlist","setPlaylist","newPlaylist","setNewPlaylist","playlistDescription","setPlaylistDescription","spotifyApi","clientId","console","log","current","setAccessToken","getMe","then","res","body","id","createPlaylist","topTracksResponse","getMyTopTracks","limit","trackIds","items","map","track","recommendationsResponse","getRecommendations","seed_tracks","trackUris","tracks","uri","name","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","length","item","index","artists","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Playlist/Playlist.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-node';\n\nfunction Playlist({ accessToken }) {\n    const [userID, setUserID] = useState();\n    const [playlist, setPlaylist] = useState(null); // New state variable for the playlist\n    const [newPlaylist, setNewPlaylist] = useState(null);\n    const [playlistDescription, setPlaylistDescription] = useState('');\n\n    const spotifyApi = useRef(\n        new SpotifyWebApi({\n            clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n        })\n    );\n\n    useEffect((playlist) => {\n        console.log('Playlist state:', playlist);\n    }, [playlist]);\n\n    \n\n    useEffect(() => {\n        if (!accessToken) return;\n        spotifyApi.current.setAccessToken(accessToken);\n    \n        // Get the user's ID\n        spotifyApi.current.getMe().then((res) => {\n            setUserID(res.body.id);\n            console.log('User ID:', res.body.id); // Log the user ID\n        });\n    }, [accessToken]);\n    \n\n\n    // Cant use callbacks here, playlist stays undefined\n    const createPlaylist = async () => {\n        try {\n            // Get the user's top tracks\n            const topTracksResponse = await spotifyApi.current.getMyTopTracks({ limit: 5 });\n            const trackIds = topTracksResponse.body.items.map(track => track.id);\n    \n            // Get recommendations based on these tracks\n            const recommendationsResponse = await spotifyApi.current.getRecommendations({ seed_tracks: trackIds });\n            const trackUris = recommendationsResponse.body.tracks.map(track => track.uri);\n    \n            // Create a new playlist in the state\n            setNewPlaylist({ name: 'New Playlist', tracks: trackUris });\n        } catch (err) {\n            console.error('Error:', err);\n        }\n    };\n\n \n\n    return (\n        <div className=\"playlist\">\n            <h1>Playlists</h1>\n            <div className=\"playlist__description\">\n                <p>Create a new playlist based on your top tracks.</p>\n                </div>\n\n        <button onClick={createPlaylist}>Create </button>\n        \n        {playlist ? (\n            <div>\n                <h2>{playlist.name}</h2>\n                <p>{playlist.description}</p>\n                {/* Render the playlist tracks */}\n                {playlist.tracks && playlist.tracks.items && playlist.tracks.items.length > 0 ? (\n                    playlist.tracks.items.map((item, index) => (\n                        <div key={index}>\n                            <p>{item.track.name} by {item.track.artists[0].name}</p>\n                        </div>\n                    ))\n                ) : (\n                    <p>No tracks in playlist.</p>\n                )}\n            </div>\n        ) : (\n            <p>No playlist data to display. Playlist state: {JSON.stringify(playlist)}</p>\n        )}\n    </div>\n);\n    \n}\n\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}