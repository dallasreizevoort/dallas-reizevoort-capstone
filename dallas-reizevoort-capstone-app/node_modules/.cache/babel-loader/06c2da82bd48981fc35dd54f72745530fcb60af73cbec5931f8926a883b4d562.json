{"ast":null,"code":"var _jsxFileName = \"/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  code\n}) {\n  _s();\n  const accessToken = useAuth(code);\n  const [topTracks, setTopTracks] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n  const spotifyApi = useRef(new spotifyWebApi({\n    clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\"\n  }));\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    const calculateTopGenres = artists => {\n      const allGenres = artists.flatMap(artist => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts).sort((a, b) => b[1] - a[1]).slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach(timeRange => {\n      spotifyApi.current.getMyTopArtists({\n        time_range: timeRange,\n        limit: 50\n      }).then(res => {\n        const topGenres = calculateTopGenres(res.body.items);\n        if (timeRange === \"short_term\") {\n          setTopGenresShort(topGenres);\n        } else if (timeRange === \"medium_term\") {\n          setTopGenresMedium(topGenres);\n        } else if (timeRange === \"long_term\") {\n          setTopGenresLong(topGenres);\n        }\n      });\n    });\n    console.log(\"API\", spotifyApi);\n    spotifyApi.current.getMyTopTracks({\n      limit: 50\n    }).then(res => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"short_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksShort(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"medium_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksMedium(res.body.items);\n      });\n      spotifyApi.current.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 50\n      }).then(res => {\n        setTopTracksLong(res.body.items);\n      });\n    });\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      setRecentlyPlayed(response.body.items);\n    });\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard__hero\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"short_term\"),\n        children: \"Past 4 weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"medium_term\"),\n        children: \"Past 6 months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard__btn\",\n        onClick: () => setSelectedTimeRange(\"long_term\"),\n        children: \"All time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard__top\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-artists\",\n          element: /*#__PURE__*/_jsxDEV(Artists, {\n            selectedTimeRange: selectedTimeRange,\n            topArtistsShort: topArtistsShort,\n            topArtistsMedium: topArtistsMedium,\n            topArtistsLong: topArtistsLong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-tracks\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__tracks\",\n            children: [selectedTimeRange === \"short_term\" && topTracksShort.map((track, index) => {\n              var _track$album, _track$album$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album = track.album) === null || _track$album === void 0 ? void 0 : (_track$album$images$ = _track$album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"medium_term\" && topTracksMedium.map((track, index) => {\n              var _track$album2, _track$album2$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album2 = track.album) === null || _track$album2 === void 0 ? void 0 : (_track$album2$images$ = _track$album2.images[0]) === null || _track$album2$images$ === void 0 ? void 0 : _track$album2$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this);\n            }), selectedTimeRange === \"long_term\" && topTracksLong.map((track, index) => {\n              var _track$album3, _track$album3$images$;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_track$album3 = track.album) === null || _track$album3 === void 0 ? void 0 : (_track$album3$images$ = _track$album3.images[0]) === null || _track$album3$images$ === void 0 ? void 0 : _track$album3$images$.url,\n                    alt: track.name,\n                    className: \"track__image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__title\",\n                    children: track.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__container\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"track__artist\",\n                    children: track.artists.map(artist => artist.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track__link\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: track.external_urls.spotify,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SpotifyIcon,\n                      alt: \"Spotify Icon\",\n                      className: \"track__icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-genres\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__genres\",\n            children: [selectedTimeRange === \"short_term\" && topGenresShort.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresShort.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"genre__container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"genre__rank\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"genre__title\",\n                    children: genre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresShort.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 25\n              }, this))\n            }, void 0, false), selectedTimeRange === \"medium_term\" && topGenresMedium.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresMedium.map(([genre, count], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__rank\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__title\",\n                  children: genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresMedium.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 25\n              }, this))\n            }, void 0, false), selectedTimeRange === \"long_term\" && topGenresLong.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: topGenresLong.map(([genre, count], index) => (console.log(\"count\", count), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"genre\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__rank\",\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"genre__title\",\n                  children: genre\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n                  value: count,\n                  max: Math.max(...topGenresLong.map(([_, count]) => count))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 31\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 29\n              }, this)))\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recently-played\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard__recents\",\n            children: recentlyPlayed.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__rank\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: track.track.album.images[0].url,\n                alt: track.track.name,\n                className: \"track__image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"track__title\",\n                children: track.track.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"thHdqvLtyF6fGLkR6GfjFuGtZ8c=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useAuth","useState","useEffect","useRef","spotifyWebApi","Routes","Route","SpotifyIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","code","_s","accessToken","topTracks","setTopTracks","recentlyPlayed","setRecentlyPlayed","recentlyPlayedTracks","setRecentlyPlayedTracks","topTracksShort","setTopTracksShort","topTracksMedium","setTopTracksMedium","topTracksLong","setTopTracksLong","topGenresShort","setTopGenresShort","topGenresMedium","setTopGenresMedium","topGenresLong","setTopGenresLong","selectedTimeRange","setSelectedTimeRange","spotifyApi","clientId","current","setAccessToken","calculateTopGenres","artists","allGenres","flatMap","artist","genres","genreCounts","reduce","counts","genre","Object","entries","sort","a","b","slice","timeRanges","forEach","timeRange","getMyTopArtists","time_range","limit","then","res","topGenres","body","items","console","log","getMyTopTracks","getMyRecentlyPlayedTracks","response","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Artists","topArtistsShort","topArtistsMedium","topArtistsLong","map","track","index","_track$album","_track$album$images$","src","album","images","url","alt","name","join","href","external_urls","spotify","target","rel","_track$album2","_track$album2$images$","_track$album3","_track$album3$images$","length","count","value","max","Math","_","_c","$RefreshReg$"],"sources":["/Users/dallas/BrainStation/dallas-reizevoort-capstone/dallas-reizevoort-capstone-app/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport useAuth from \"../../Auth/useAuth\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Dashboard.scss\";\nimport spotifyWebApi from \"spotify-web-api-node\";\n\n\nimport { Routes, Route } from \"react-router-dom\";\nimport SpotifyIcon from \"../../assets/images/Spotify_Icon_RGB_White.png\";\n\nfunction Dashboard({ code }) {\n  const accessToken = useAuth(code);\n\n \n  const [topTracks, setTopTracks] = useState([]);\n\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [recentlyPlayedTracks, setRecentlyPlayedTracks] = useState([]);\n  const [topTracksShort, setTopTracksShort] = useState([]);\n  const [topTracksMedium, setTopTracksMedium] = useState([]);\n  const [topTracksLong, setTopTracksLong] = useState([]);\n  const [topGenresShort, setTopGenresShort] = useState([]);\n  const [topGenresMedium, setTopGenresMedium] = useState([]);\n  const [topGenresLong, setTopGenresLong] = useState([]);\n  const [selectedTimeRange, setSelectedTimeRange] = useState(\"short_term\");\n\n\n  const spotifyApi = useRef(\n    new spotifyWebApi({\n      clientId: \"6ba0cc8b29e145ea99f2401c09a35e6e\",\n    })\n  );\n\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n\n    const calculateTopGenres = (artists) => {\n      const allGenres = artists.flatMap((artist) => artist.genres);\n      const genreCounts = allGenres.reduce((counts, genre) => {\n        counts[genre] = (counts[genre] || 0) + 1;\n        return counts;\n      }, {});\n      return Object.entries(genreCounts)\n        .sort((a, b) => b[1] - a[1])\n        .slice(0, 15);\n    };\n\n    // Fetch data for each time range\n    const timeRanges = [\"short_term\", \"medium_term\", \"long_term\"];\n    timeRanges.forEach((timeRange) => {\n      spotifyApi.current\n        .getMyTopArtists({ time_range: timeRange, limit: 50 })\n        .then((res) => {\n          const topGenres = calculateTopGenres(res.body.items);\n          if (timeRange === \"short_term\") {\n            setTopGenresShort(topGenres);\n          } else if (timeRange === \"medium_term\") {\n            setTopGenresMedium(topGenres);\n          } else if (timeRange === \"long_term\") {\n            setTopGenresLong(topGenres);\n          }\n        });\n    });\n\n    console.log(\"API\", spotifyApi);\n\n    spotifyApi.current.getMyTopTracks({ limit: 50 }).then((res) => {\n      setTopTracks(res.body.items);\n      console.log(res.body.items);\n\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"short_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksShort(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"medium_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksMedium(res.body.items);\n        });\n      spotifyApi.current\n        .getMyTopTracks({ time_range: \"long_term\", limit: 50 })\n        .then((res) => {\n          setTopTracksLong(res.body.items);\n        });\n    });\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.current.setAccessToken(accessToken);\n    spotifyApi.current\n      .getMyRecentlyPlayedTracks({ limit: 50 })\n      .then((response) => {\n        setRecentlyPlayed(response.body.items);\n      });\n  }, [accessToken]);\n\n  return (\n    <div className=\"dashboard\">\n        <section className=\"dashboard__hero\">\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"short_term\")}\n          >\n            Past 4 weeks\n          </button>\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"medium_term\")}\n          >\n            Past 6 months\n          </button>\n          <button\n            className=\"dashboard__btn\"\n            onClick={() => setSelectedTimeRange(\"long_term\")}\n          >\n            All time\n          </button>\n        </section>\n      \n\n      <div className=\"dashboard__top\">\n      <Routes>\n          <Route\n            path=\"/top-artists\"\n            element={\n              <Artists\n                selectedTimeRange={selectedTimeRange}\n                topArtistsShort={topArtistsShort}\n                topArtistsMedium={topArtistsMedium}\n                topArtistsLong={topArtistsLong}\n              />\n            }\n          />\n          <Route\n            path=\"/top-tracks\"\n            element={\n              <div className=\"dashboard__tracks\">\n                {selectedTimeRange === \"short_term\" &&\n                  topTracksShort.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"medium_term\" &&\n                  topTracksMedium.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n                {selectedTimeRange === \"long_term\" &&\n                  topTracksLong.map((track, index) => (\n                    <div key={index} className=\"track\">\n                      <div className=\"track__container\">\n                        <span className=\"track__rank\">{index + 1}</span>\n                        <img\n                          src={track.album?.images[0]?.url}\n                          alt={track.name}\n                          className=\"track__image\"\n                        />\n                        <span className=\"track__title\">{track.name}</span>\n                      </div>\n                      <div className=\"track__container\">\n                        <span className=\"track__artist\">\n                          {track.artists\n                            .map((artist) => artist.name)\n                            .join(\", \")}\n                        </span>\n                      </div>\n                      <div className=\"track__link\">\n                        <a\n                          href={track.external_urls.spotify}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <img\n                            src={SpotifyIcon}\n                            alt=\"Spotify Icon\"\n                            className=\"track__icon\"\n                          />\n                        </a>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            }\n          />\n          <Route\n            path=\"/top-genres\"\n            element={\n              <div className=\"dashboard__genres\">\n                {selectedTimeRange === \"short_term\" &&\n                  topGenresShort.length > 0 && (\n                    <>\n                      {topGenresShort.map(([genre, count], index) => (\n                        <div key={index} className=\"genre\">\n                          <div className=\"genre__container\">\n                            <span className=\"genre__rank\">{index + 1}</span>\n                            <span className=\"genre__title\">{genre}</span>\n                          </div>\n                          <progress\n                            value={count}\n                            max={Math.max(\n                              ...topGenresShort.map(([_, count]) => count)\n                            )}\n                          ></progress>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                {selectedTimeRange === \"medium_term\" &&\n                  topGenresMedium.length > 0 && (\n                    <>\n                      {topGenresMedium.map(([genre, count], index) => (\n                        <div key={index} className=\"genre\">\n                          <span className=\"genre__rank\">{index + 1}</span>\n                          <span className=\"genre__title\">{genre}</span>\n                          <progress\n                            value={count}\n                            max={Math.max(\n                              ...topGenresMedium.map(([_, count]) => count)\n                            )}\n                          ></progress>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                {selectedTimeRange === \"long_term\" &&\n                  topGenresLong.length > 0 && (\n                    <>\n                      {topGenresLong.map(\n                        ([genre, count], index) => (\n                          console.log(\"count\", count),\n                          (\n                            <div key={index} className=\"genre\">\n                              <span className=\"genre__rank\">{index + 1}</span>\n                              <span className=\"genre__title\">{genre}</span>\n                              <progress\n                                value={count}\n                                max={Math.max(\n                                  ...topGenresLong.map(([_, count]) => count)\n                                )}\n                              ></progress>\n                            </div>\n                          )\n                        )\n                      )}\n                    </>\n                  )}\n              </div>\n            }\n          />\n          <Route\n            path=\"/recently-played\"\n            element={\n              <div className=\"dashboard__recents\">\n                {recentlyPlayed.map((track, index) => (\n                  <div key={index} className=\"recent\">\n                    <span className=\"track__rank\">{index + 1}</span>\n                    <img\n                      src={track.track.album.images[0].url}\n                      alt={track.track.name}\n                      className=\"track__image\"\n                    />\n                    <span className=\"track__title\">{track.track.name}</span>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}